#!/bin/bash
set -eu

. ./config

if [[ "${SENTRY_API_TOKEN:-}" == "" ]]; then
  echo "SENTRY_API_TOKEN not found in the environment!"
  exit 1
fi

set -x
update_repo
bind_version

echo "> Deploying ${VERSION:0:7}"

gcloud info
gcloud container clusters get-credentials zeus --zone "us-central1-b" --project "$PROJECT_ID"
gcloud container images describe ${IMAGE}:${VERSION}

# Create a Sentry release
# TODO(dcramer): upload sourcemaps
set +x
curl https://sentry.io/api/0/organizations/sentry/releases/ \
  -X POST \
  -H "Authorization: Bearer ${SENTRY_API_TOKEN}" \
  -H 'Content-Type: application/json' \
  -d "
  {
    \"version\": \"${VERSION}\",
    \"refs\": [{
        \"repository\":\"getsentry/zeus\",
        \"commit\":\"${VERSION}\"
    }],
    \"projects\":[\"zeus\"]
  }
  "
set -x

kubectl set image deploy/web zeus=${IMAGE}:${VERSION} --record
kubectl set image deploy/pubsub zeus=${IMAGE}:${VERSION} --record
kubectl set image deploy/worker zeus=${IMAGE}:${VERSION} --record

kubectl rollout status deployments web
kubectl rollout status deployments pubsub
kubectl rollout status deployments worker

# Create a Sentry deploy
set +x
curl https://sentry.io/api/0/organizations/sentry/releases/${VERSION}/deploys/ \
  -X POST \
  -H "Authorization: Bearer ${SENTRY_API_TOKEN}" \
  -H 'Content-Type: application/json' \
  -d '
  {
    "environment": "production",
    "name": "zeus"
  }
  '
set -x
