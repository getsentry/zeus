// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RevisionList renders 1`] = `
<RevisionList
  columns={
    Array [
      "coverage",
      "duration",
      "date",
    ]
  }
  location={
    Object {
      "pathame": "/mock-pathname/",
      "query": Object {},
    }
  }
  params={
    Object {
      "ownerName": "getsentry",
      "provider": "gh",
      "repoName": "zeus",
    }
  }
  repo={
    Object {
      "backend": "git",
      "created_at": "2017-08-15T17:01:33.206772+00:00",
      "full_name": "gh/getsentry/zeus",
      "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
      "latest_build": null,
      "name": "zeus",
      "owner_name": "getsentry",
      "permissions": Object {
        "admin": true,
        "read": true,
        "write": true,
      },
      "provider": "gh",
      "url": "git@github.com:getsentry/zeus.git",
    }
  }
  revisionList={
    Array [
      Object {
        "author": Object {
          "email": "dcramer@gmail.com",
          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
          "name": "David Cramer",
        },
        "committed_at": "2018-06-08T16:45:55+00:00",
        "created_at": "2018-06-08T16:45:55+00:00",
        "latest_build": Object {
          "created_at": "2018-01-06T16:07:16.830829+00:00",
          "external_id": "325812408",
          "finished_at": "2018-01-06T16:11:04.393590+00:00",
          "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
          "label": "fix: Remove break-word behavior on coverage",
          "number": 650,
          "provider": "travis",
          "repository": undefined,
          "result": "passed",
          "source": Object {
            "author": Object {
              "email": "dcramer@gmail.com",
              "id": "659dc21c-81db-11e7-988a-0a580a28047a",
              "name": "David Cramer",
            },
            "created_at": "2018-01-06T16:07:16.814650+00:00",
            "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
            "revision": Object {
              "author": Object {
                "email": "dcramer@gmail.com",
                "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                "name": "David Cramer",
              },
              "committed_at": "2018-01-06T16:06:52+00:00",
              "created_at": "2018-01-06T16:06:52+00:00",
              "message": "fix: Remove break-word behavior on coverage
",
              "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
            },
          },
          "started_at": "2018-01-06T16:07:16.957093+00:00",
          "stats": Object {
            "coverage": Object {
              "diff_lines_covered": 0,
              "diff_lines_uncovered": 0,
              "lines_covered": 6127,
              "lines_uncovered": 3060,
            },
            "style_violations": Object {
              "count": 0,
            },
            "tests": Object {
              "count": 153,
              "count_unique": 153,
              "duration": 14673,
              "failures": 0,
              "failures_unique": 0,
            },
            "webpack": Object {
              "total_asset_size": 0,
            },
          },
          "status": "finished",
          "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
        },
        "message": "fix: Maintain repository in published data
",
        "sha": "26fef62489212d56d0a5037e3e6d876b887e972b",
      },
    ]
  }
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "kakZqJ",
            "rules": Array [
              "
  background: #fff;
  border-radius: 3px;
  margin-bottom: 20px;

  .ResultGrid-Column {
    text-align: center;
  }

  .ResultGrid-Column:last-child {
    text-align: right;
  }

  .ResultGrid-Column:first-child {
    text-align: left;
  }

  .ResultGrid-Row:last-child .ResultGrid-Column {
    border-bottom: 0;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bxivhb kakZqJ"
      >
        <Styled(Component)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "bxhrCT",
                  "rules": Array [
                    "
  padding: 0 2px 5px;
  border-bottom: 3px solid #eee;
  font-size: 12px;
  color: #999;
  font-weight: 500;
  text-transform: uppercase;
",
                  ],
                },
                "displayName": "Styled(Component)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <Component
              className="sc-EHOje bxhrCT"
            >
              <Styled(styled.div)
                align="center"
                className="sc-EHOje bxhrCT ResultGrid-Header"
              >
                <styled.div
                  align="center"
                  className="sc-EHOje bxhrCT ResultGrid-Header sc-htpNat iSNGhk"
                >
                  <div
                    className="sc-EHOje bxhrCT ResultGrid-Header sc-htpNat iSNGhk sc-bdVaJa iHZvIS"
                  >
                    <Styled(Component)>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
                              "lastClassName": "eiLvyf",
                              "rules": Array [
                                "
  overflow: hidden;
  ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <Component
                          className="sc-ifAKCX gVDkew"
                        >
                          <styled.div
                            className="sc-ifAKCX gVDkew ResultGrid-Column"
                            flex={1}
                          >
                            <div
                              className="sc-ifAKCX gVDkew ResultGrid-Column sc-bdVaJa kYmYWE"
                            >
                              Revision
                            </div>
                          </styled.div>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                    <Styled(Component)
                      hide="sm"
                      textAlign="center"
                      width={90}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
                              "lastClassName": "eiLvyf",
                              "rules": Array [
                                "
  overflow: hidden;
  ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hide="sm"
                        textAlign="center"
                        width={90}
                      >
                        <Component
                          className="sc-ifAKCX eiLvyf"
                          hide="sm"
                          textAlign="center"
                          width={90}
                        >
                          <styled.div
                            className="sc-ifAKCX eiLvyf ResultGrid-Column"
                            hide="sm"
                            style={
                              Object {
                                "textAlign": "center",
                              }
                            }
                            textAlign="center"
                            width={90}
                          >
                            <div
                              className="sc-ifAKCX eiLvyf ResultGrid-Column sc-bdVaJa jfzzVE"
                              style={
                                Object {
                                  "textAlign": "center",
                                }
                              }
                              width={90}
                            >
                              Coverage
                            </div>
                          </styled.div>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                    <Styled(Component)
                      hide="sm"
                      textAlign="center"
                      width={90}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
                              "lastClassName": "eiLvyf",
                              "rules": Array [
                                "
  overflow: hidden;
  ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hide="sm"
                        textAlign="center"
                        width={90}
                      >
                        <Component
                          className="sc-ifAKCX eiLvyf"
                          hide="sm"
                          textAlign="center"
                          width={90}
                        >
                          <styled.div
                            className="sc-ifAKCX eiLvyf ResultGrid-Column"
                            hide="sm"
                            style={
                              Object {
                                "textAlign": "center",
                              }
                            }
                            textAlign="center"
                            width={90}
                          >
                            <div
                              className="sc-ifAKCX eiLvyf ResultGrid-Column sc-bdVaJa jfzzVE"
                              style={
                                Object {
                                  "textAlign": "center",
                                }
                              }
                              width={90}
                            >
                              Duration
                            </div>
                          </styled.div>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                    <Styled(Component)
                      hide="sm"
                      textAlign="right"
                      width={150}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
                              "lastClassName": "eiLvyf",
                              "rules": Array [
                                "
  overflow: hidden;
  ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hide="sm"
                        textAlign="right"
                        width={150}
                      >
                        <Component
                          className="sc-ifAKCX eiLvyf"
                          hide="sm"
                          textAlign="right"
                          width={150}
                        >
                          <styled.div
                            className="sc-ifAKCX eiLvyf ResultGrid-Column"
                            hide="sm"
                            style={
                              Object {
                                "textAlign": "right",
                              }
                            }
                            textAlign="right"
                            width={150}
                          >
                            <div
                              className="sc-ifAKCX eiLvyf ResultGrid-Column sc-bdVaJa bNDigs"
                              style={
                                Object {
                                  "textAlign": "right",
                                }
                              }
                              width={150}
                            >
                              Commit Date
                            </div>
                          </styled.div>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </Component>
          </StyledComponent>
        </Styled(Component)>
        <div>
          <RevisionListItem
            columns={
              Array [
                "coverage",
                "duration",
                "date",
              ]
            }
            includeAuthor={true}
            key="26fef62489212d56d0a5037e3e6d876b887e972b"
            params={
              Object {
                "ownerName": "getsentry",
                "provider": "gh",
                "repoName": "zeus",
              }
            }
            repo={
              Object {
                "backend": "git",
                "created_at": "2017-08-15T17:01:33.206772+00:00",
                "full_name": "gh/getsentry/zeus",
                "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                "latest_build": null,
                "name": "zeus",
                "owner_name": "getsentry",
                "permissions": Object {
                  "admin": true,
                  "read": true,
                  "write": true,
                },
                "provider": "gh",
                "url": "git@github.com:getsentry/zeus.git",
              }
            }
            revision={
              Object {
                "author": Object {
                  "email": "dcramer@gmail.com",
                  "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                  "name": "David Cramer",
                },
                "committed_at": "2018-06-08T16:45:55+00:00",
                "created_at": "2018-06-08T16:45:55+00:00",
                "latest_build": Object {
                  "created_at": "2018-01-06T16:07:16.830829+00:00",
                  "external_id": "325812408",
                  "finished_at": "2018-01-06T16:11:04.393590+00:00",
                  "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                  "label": "fix: Remove break-word behavior on coverage",
                  "number": 650,
                  "provider": "travis",
                  "repository": undefined,
                  "result": "passed",
                  "source": Object {
                    "author": Object {
                      "email": "dcramer@gmail.com",
                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                      "name": "David Cramer",
                    },
                    "created_at": "2018-01-06T16:07:16.814650+00:00",
                    "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                    "revision": Object {
                      "author": Object {
                        "email": "dcramer@gmail.com",
                        "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                        "name": "David Cramer",
                      },
                      "committed_at": "2018-01-06T16:06:52+00:00",
                      "created_at": "2018-01-06T16:06:52+00:00",
                      "message": "fix: Remove break-word behavior on coverage
",
                      "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                    },
                  },
                  "started_at": "2018-01-06T16:07:16.957093+00:00",
                  "stats": Object {
                    "coverage": Object {
                      "diff_lines_covered": 0,
                      "diff_lines_uncovered": 0,
                      "lines_covered": 6127,
                      "lines_uncovered": 3060,
                    },
                    "style_violations": Object {
                      "count": 0,
                    },
                    "tests": Object {
                      "count": 153,
                      "count_unique": 153,
                      "duration": 14673,
                      "failures": 0,
                      "failures_unique": 0,
                    },
                    "webpack": Object {
                      "total_asset_size": 0,
                    },
                  },
                  "status": "finished",
                  "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                },
                "message": "fix: Maintain repository in published data
",
                "sha": "26fef62489212d56d0a5037e3e6d876b887e972b",
              }
            }
          >
            <BuildListItem
              build={
                Object {
                  "created_at": "2018-01-06T16:07:16.830829+00:00",
                  "external_id": "325812408",
                  "finished_at": "2018-01-06T16:11:04.393590+00:00",
                  "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                  "label": "fix: Remove break-word behavior on coverage",
                  "number": 650,
                  "provider": "travis",
                  "repository": undefined,
                  "result": "passed",
                  "source": Object {
                    "author": Object {
                      "email": "dcramer@gmail.com",
                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                      "name": "David Cramer",
                    },
                    "created_at": "2018-01-06T16:07:16.814650+00:00",
                    "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                    "revision": Object {
                      "author": Object {
                        "email": "dcramer@gmail.com",
                        "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                        "name": "David Cramer",
                      },
                      "committed_at": "2018-01-06T16:06:52+00:00",
                      "created_at": "2018-01-06T16:06:52+00:00",
                      "message": "fix: Remove break-word behavior on coverage
",
                      "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                    },
                  },
                  "started_at": "2018-01-06T16:07:16.957093+00:00",
                  "stats": Object {
                    "coverage": Object {
                      "diff_lines_covered": 0,
                      "diff_lines_uncovered": 0,
                      "lines_covered": 6127,
                      "lines_uncovered": 3060,
                    },
                    "style_violations": Object {
                      "count": 0,
                    },
                    "tests": Object {
                      "count": 153,
                      "count_unique": 153,
                      "duration": 14673,
                      "failures": 0,
                      "failures_unique": 0,
                    },
                    "webpack": Object {
                      "total_asset_size": 0,
                    },
                  },
                  "status": "finished",
                  "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                }
              }
              columns={
                Array [
                  "coverage",
                  "duration",
                  "date",
                ]
              }
              date="2018-06-08T16:45:55+00:00"
              includeAuthor={true}
              repo={
                Object {
                  "backend": "git",
                  "created_at": "2017-08-15T17:01:33.206772+00:00",
                  "full_name": "gh/getsentry/zeus",
                  "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                  "latest_build": null,
                  "name": "zeus",
                  "owner_name": "getsentry",
                  "permissions": Object {
                    "admin": true,
                    "read": true,
                    "write": true,
                  },
                  "provider": "gh",
                  "url": "git@github.com:getsentry/zeus.git",
                }
              }
            >
              <Styled(Link)
                activeClassName="active"
                to="/gh/getsentry/zeus/builds/650"
              >
                <StyledComponent
                  activeClassName="active"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "_foldedDefaultProps": Object {
                        "activeClassName": "active",
                      },
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "eHkXRX",
                        "rules": Array [
                          "
  display: block;

  &:hover {
    background-color: #f0eff5;
  }

  &.",
                          [Function],
                          " {
    color: #fff;
    background: #7b6be6;

    > div {
      color: #fff !important;

      svg {
        color: #fff;
        opacity: 0.5;
      }
    }
  }
",
                        ],
                      },
                      "displayName": "Styled(Link)",
                      "foldedComponentIds": Array [],
                      "getDefaultProps": [Function],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  to="/gh/getsentry/zeus/builds/650"
                >
                  <Link
                    activeClassName="active"
                    className="sc-bdVaJa eHkXRX"
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to="/gh/getsentry/zeus/builds/650"
                  >
                    <a
                      className="sc-bdVaJa eHkXRX"
                      onClick={[Function]}
                      style={Object {}}
                    >
                      <Styled(Component)>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": false,
                                "lastClassName": "kdaNqr",
                                "rules": Array [
                                  "
  padding: 8px 2px;
  color: #333;
  border-bottom: 1px solid #eee;
  font-size: 14px;
",
                                ],
                              },
                              "displayName": "Styled(Component)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Component
                            className="sc-bZQynM kdaNqr"
                          >
                            <Styled(styled.div)
                              align="center"
                              className="sc-bZQynM kdaNqr ResultGrid-Row"
                            >
                              <styled.div
                                align="center"
                                className="sc-bZQynM kdaNqr ResultGrid-Row sc-htpNat iSNGhk"
                              >
                                <div
                                  className="sc-bZQynM kdaNqr ResultGrid-Row sc-htpNat iSNGhk sc-bdVaJa iHZvIS"
                                >
                                  <Styled(Component)>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "eiLvyf",
                                            "rules": Array [
                                              "
  overflow: hidden;
  ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <Component
                                        className="sc-ifAKCX gVDkew"
                                      >
                                        <styled.div
                                          className="sc-ifAKCX gVDkew ResultGrid-Column"
                                          flex={1}
                                        >
                                          <div
                                            className="sc-ifAKCX gVDkew ResultGrid-Column sc-bdVaJa kYmYWE"
                                          >
                                            <Styled(styled.div)>
                                              <styled.div
                                                className="sc-htpNat eLQHN"
                                              >
                                                <div
                                                  className="sc-htpNat eLQHN sc-bdVaJa iHZvIS"
                                                >
                                                  <styled.div
                                                    mr={8}
                                                    width={15}
                                                  >
                                                    <div
                                                      className="sc-bdVaJa hGSMoE"
                                                      width={15}
                                                    >
                                                      <ObjectResult
                                                        data={
                                                          Object {
                                                            "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                            "external_id": "325812408",
                                                            "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                            "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                            "label": "fix: Remove break-word behavior on coverage",
                                                            "number": 650,
                                                            "provider": "travis",
                                                            "repository": undefined,
                                                            "result": "passed",
                                                            "source": Object {
                                                              "author": Object {
                                                                "email": "dcramer@gmail.com",
                                                                "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                "name": "David Cramer",
                                                              },
                                                              "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                              "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                              "revision": Object {
                                                                "author": Object {
                                                                  "email": "dcramer@gmail.com",
                                                                  "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                  "name": "David Cramer",
                                                                },
                                                                "committed_at": "2018-01-06T16:06:52+00:00",
                                                                "created_at": "2018-01-06T16:06:52+00:00",
                                                                "message": "fix: Remove break-word behavior on coverage
",
                                                                "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                              },
                                                            },
                                                            "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                            "stats": Object {
                                                              "coverage": Object {
                                                                "diff_lines_covered": 0,
                                                                "diff_lines_uncovered": 0,
                                                                "lines_covered": 6127,
                                                                "lines_uncovered": 3060,
                                                              },
                                                              "style_violations": Object {
                                                                "count": 0,
                                                              },
                                                              "tests": Object {
                                                                "count": 153,
                                                                "count_unique": 153,
                                                                "duration": 14673,
                                                                "failures": 0,
                                                                "failures_unique": 0,
                                                              },
                                                              "webpack": Object {
                                                                "total_asset_size": 0,
                                                              },
                                                            },
                                                            "status": "finished",
                                                            "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                          }
                                                        }
                                                        size={16}
                                                      >
                                                        <styled.div
                                                          result="passed"
                                                          status="finished"
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "dnPFAX",
                                                                  "rules": Array [
                                                                    "
  display: inline-block;
  margin-right: 5px;

  ",
                                                                    [Function],
                                                                    ";
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            result="passed"
                                                            status="finished"
                                                          >
                                                            <div
                                                              className="sc-htpNat dnPFAX"
                                                              result="passed"
                                                            >
                                                              <MdCheckCircle
                                                                size={16}
                                                              >
                                                                <IconBase
                                                                  size={16}
                                                                  viewBox="0 0 40 40"
                                                                >
                                                                  <svg
                                                                    fill="currentColor"
                                                                    height={16}
                                                                    preserveAspectRatio="xMidYMid meet"
                                                                    style={
                                                                      Object {
                                                                        "color": undefined,
                                                                        "verticalAlign": "middle",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 40 40"
                                                                    width={16}
                                                                  >
                                                                    <g>
                                                                      <path
                                                                        d="m16.6 28.4l15-15-2.3-2.5-12.7 12.7-5.9-5.9-2.3 2.3z m3.4-25c9.2 0 16.6 7.4 16.6 16.6s-7.4 16.6-16.6 16.6-16.6-7.4-16.6-16.6 7.4-16.6 16.6-16.6z"
                                                                      />
                                                                    </g>
                                                                  </svg>
                                                                </IconBase>
                                                              </MdCheckCircle>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ObjectResult>
                                                    </div>
                                                  </styled.div>
                                                  <styled.div
                                                    flex="1"
                                                    style={
                                                      Object {
                                                        "minWidth": 0,
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="sc-bdVaJa kYmYWE"
                                                      style={
                                                        Object {
                                                          "minWidth": 0,
                                                        }
                                                      }
                                                    >
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-gzVnrw",
                                                                "isStatic": false,
                                                                "lastClassName": "iMOCDb",
                                                                "rules": Array [
                                                                  "
  font-size: 15px;
  line-height: 1.2;
  font-weight: 500;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-gzVnrw",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-gzVnrw iMOCDb"
                                                          >
                                                            fix: Remove break-word behavior on coverage
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                      <styled.div>
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-gZMcBi",
                                                                "isStatic": false,
                                                                "lastClassName": "ewUYYl",
                                                                "rules": Array [
                                                                  "
  display: flex;
  font-size: 12px;
  color: #7f7d8f;

  > div {
    margin-right: 12px;

    &:last-child {
      margin-right: 0;
    }
  }

  svg {
    vertical-align: bottom !important;
    margin-right: 5px;
    color: #bfbfcb;
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.div",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-gZMcBi",
                                                              "target": "div",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                        >
                                                          <div
                                                            className="sc-gZMcBi ewUYYl"
                                                          >
                                                            <Styled(styled.div)>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dnqmqq",
                                                                      "isStatic": false,
                                                                      "lastClassName": "dIYhNP",
                                                                      "rules": Array [
                                                                        "
  font-family: 'Monaco', monospace;
  font-size: 12px;
  font-weight: 600;
",
                                                                        "
  font-weight: 400;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "Styled(styled.div)",
                                                                    "foldedComponentIds": Array [
                                                                      "sc-htoDjs",
                                                                    ],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dnqmqq",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-htoDjs sc-dnqmqq dIYhNP"
                                                                >
                                                                  eff634a
                                                                </div>
                                                              </StyledComponent>
                                                            </Styled(styled.div)>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-htoDjs",
                                                                      "isStatic": false,
                                                                      "lastClassName": "iecDKs",
                                                                      "rules": Array [
                                                                        "
  font-family: 'Monaco', monospace;
  font-size: 12px;
  font-weight: 600;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-htoDjs",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-htoDjs iecDKs"
                                                                >
                                                                  <ObjectAuthor
                                                                    data={
                                                                      Object {
                                                                        "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                                        "external_id": "325812408",
                                                                        "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                                        "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                                        "label": "fix: Remove break-word behavior on coverage",
                                                                        "number": 650,
                                                                        "provider": "travis",
                                                                        "repository": undefined,
                                                                        "result": "passed",
                                                                        "source": Object {
                                                                          "author": Object {
                                                                            "email": "dcramer@gmail.com",
                                                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                            "name": "David Cramer",
                                                                          },
                                                                          "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                                          "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                                          "revision": Object {
                                                                            "author": Object {
                                                                              "email": "dcramer@gmail.com",
                                                                              "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                              "name": "David Cramer",
                                                                            },
                                                                            "committed_at": "2018-01-06T16:06:52+00:00",
                                                                            "created_at": "2018-01-06T16:06:52+00:00",
                                                                            "message": "fix: Remove break-word behavior on coverage
",
                                                                            "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                                          },
                                                                        },
                                                                        "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                                        "stats": Object {
                                                                          "coverage": Object {
                                                                            "diff_lines_covered": 0,
                                                                            "diff_lines_uncovered": 0,
                                                                            "lines_covered": 6127,
                                                                            "lines_uncovered": 3060,
                                                                          },
                                                                          "style_violations": Object {
                                                                            "count": 0,
                                                                          },
                                                                          "tests": Object {
                                                                            "count": 153,
                                                                            "count_unique": 153,
                                                                            "duration": 14673,
                                                                            "failures": 0,
                                                                            "failures_unique": 0,
                                                                          },
                                                                          "webpack": Object {
                                                                            "total_asset_size": 0,
                                                                          },
                                                                        },
                                                                        "status": "finished",
                                                                        "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span>
                                                                      <styled.span>
                                                                        <StyledComponent
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "sc-bwzfXH",
                                                                                "isStatic": false,
                                                                                "lastClassName": "duylup",
                                                                                "rules": Array [
                                                                                  "
  img {
    border-radius: 2px;
    overflow: hidden;
  }

  img,
  svg {
    margin-right: 5px;
    display: inline-block;
    vertical-align: text-top;
  }
",
                                                                                ],
                                                                              },
                                                                              "displayName": "styled.span",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "sc-bwzfXH",
                                                                              "target": "span",
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                        >
                                                                          <span
                                                                            className="sc-bwzfXH duylup"
                                                                          >
                                                                            <Gravatar
                                                                              default="retro"
                                                                              email="dcramer@gmail.com"
                                                                              protocol="//"
                                                                              rating="g"
                                                                              size={16}
                                                                            >
                                                                              <img
                                                                                alt="Gravatar for dcramer@gmail.com"
                                                                                className="react-gravatar"
                                                                                height={16}
                                                                                src="//www.gravatar.com/avatar/51567a4f786cd8a2c41c513b592de9f9?d=retro&r=g&s=16"
                                                                                srcSet="//www.gravatar.com/avatar/51567a4f786cd8a2c41c513b592de9f9?d=retro&r=g&s=32 2x"
                                                                                width={16}
                                                                              />
                                                                            </Gravatar>
                                                                          </span>
                                                                        </StyledComponent>
                                                                      </styled.span>
                                                                      David Cramer
                                                                    </span>
                                                                  </ObjectAuthor>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                          </div>
                                                        </StyledComponent>
                                                      </styled.div>
                                                    </div>
                                                  </styled.div>
                                                </div>
                                              </styled.div>
                                            </Styled(styled.div)>
                                          </div>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <Styled(Component)
                                    hide="sm"
                                    textAlign="center"
                                    width={90}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "eiLvyf",
                                            "rules": Array [
                                              "
  overflow: hidden;
  ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hide="sm"
                                      textAlign="center"
                                      width={90}
                                    >
                                      <Component
                                        className="sc-ifAKCX eiLvyf"
                                        hide="sm"
                                        textAlign="center"
                                        width={90}
                                      >
                                        <styled.div
                                          className="sc-ifAKCX eiLvyf ResultGrid-Column"
                                          hide="sm"
                                          style={
                                            Object {
                                              "textAlign": "center",
                                            }
                                          }
                                          textAlign="center"
                                          width={90}
                                        >
                                          <div
                                            className="sc-ifAKCX eiLvyf ResultGrid-Column sc-bdVaJa jfzzVE"
                                            style={
                                              Object {
                                                "textAlign": "center",
                                              }
                                            }
                                            width={90}
                                          >
                                            <ObjectCoverage
                                              data={
                                                Object {
                                                  "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                  "external_id": "325812408",
                                                  "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                  "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                  "label": "fix: Remove break-word behavior on coverage",
                                                  "number": 650,
                                                  "provider": "travis",
                                                  "repository": undefined,
                                                  "result": "passed",
                                                  "source": Object {
                                                    "author": Object {
                                                      "email": "dcramer@gmail.com",
                                                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                      "name": "David Cramer",
                                                    },
                                                    "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                    "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                    "revision": Object {
                                                      "author": Object {
                                                        "email": "dcramer@gmail.com",
                                                        "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                        "name": "David Cramer",
                                                      },
                                                      "committed_at": "2018-01-06T16:06:52+00:00",
                                                      "created_at": "2018-01-06T16:06:52+00:00",
                                                      "message": "fix: Remove break-word behavior on coverage
",
                                                      "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                    },
                                                  },
                                                  "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                  "stats": Object {
                                                    "coverage": Object {
                                                      "diff_lines_covered": 0,
                                                      "diff_lines_uncovered": 0,
                                                      "lines_covered": 6127,
                                                      "lines_uncovered": 3060,
                                                    },
                                                    "style_violations": Object {
                                                      "count": 0,
                                                    },
                                                    "tests": Object {
                                                      "count": 153,
                                                      "count_unique": 153,
                                                      "duration": 14673,
                                                      "failures": 0,
                                                      "failures_unique": 0,
                                                    },
                                                    "webpack": Object {
                                                      "total_asset_size": 0,
                                                    },
                                                  },
                                                  "status": "finished",
                                                  "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                }
                                              }
                                              diff={true}
                                            >
                                              <span />
                                            </ObjectCoverage>
                                          </div>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <Styled(Component)
                                    hide="sm"
                                    textAlign="center"
                                    width={90}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "eiLvyf",
                                            "rules": Array [
                                              "
  overflow: hidden;
  ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hide="sm"
                                      textAlign="center"
                                      width={90}
                                    >
                                      <Component
                                        className="sc-ifAKCX eiLvyf"
                                        hide="sm"
                                        textAlign="center"
                                        width={90}
                                      >
                                        <styled.div
                                          className="sc-ifAKCX eiLvyf ResultGrid-Column"
                                          hide="sm"
                                          style={
                                            Object {
                                              "textAlign": "center",
                                            }
                                          }
                                          textAlign="center"
                                          width={90}
                                        >
                                          <div
                                            className="sc-ifAKCX eiLvyf ResultGrid-Column sc-bdVaJa jfzzVE"
                                            style={
                                              Object {
                                                "textAlign": "center",
                                              }
                                            }
                                            width={90}
                                          >
                                            <ObjectDuration
                                              data={
                                                Object {
                                                  "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                  "external_id": "325812408",
                                                  "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                  "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                  "label": "fix: Remove break-word behavior on coverage",
                                                  "number": 650,
                                                  "provider": "travis",
                                                  "repository": undefined,
                                                  "result": "passed",
                                                  "source": Object {
                                                    "author": Object {
                                                      "email": "dcramer@gmail.com",
                                                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                      "name": "David Cramer",
                                                    },
                                                    "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                    "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                    "revision": Object {
                                                      "author": Object {
                                                        "email": "dcramer@gmail.com",
                                                        "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                        "name": "David Cramer",
                                                      },
                                                      "committed_at": "2018-01-06T16:06:52+00:00",
                                                      "created_at": "2018-01-06T16:06:52+00:00",
                                                      "message": "fix: Remove break-word behavior on coverage
",
                                                      "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                    },
                                                  },
                                                  "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                  "stats": Object {
                                                    "coverage": Object {
                                                      "diff_lines_covered": 0,
                                                      "diff_lines_uncovered": 0,
                                                      "lines_covered": 6127,
                                                      "lines_uncovered": 3060,
                                                    },
                                                    "style_violations": Object {
                                                      "count": 0,
                                                    },
                                                    "tests": Object {
                                                      "count": 153,
                                                      "count_unique": 153,
                                                      "duration": 14673,
                                                      "failures": 0,
                                                      "failures_unique": 0,
                                                    },
                                                    "webpack": Object {
                                                      "total_asset_size": 0,
                                                    },
                                                  },
                                                  "status": "finished",
                                                  "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                }
                                              }
                                              short={true}
                                            >
                                              <AggregateDuration
                                                data={
                                                  Array [
                                                    Object {
                                                      "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                      "external_id": "325812408",
                                                      "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                      "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                      "label": "fix: Remove break-word behavior on coverage",
                                                      "number": 650,
                                                      "provider": "travis",
                                                      "repository": undefined,
                                                      "result": "passed",
                                                      "source": Object {
                                                        "author": Object {
                                                          "email": "dcramer@gmail.com",
                                                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                          "name": "David Cramer",
                                                        },
                                                        "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                        "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                        "revision": Object {
                                                          "author": Object {
                                                            "email": "dcramer@gmail.com",
                                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                            "name": "David Cramer",
                                                          },
                                                          "committed_at": "2018-01-06T16:06:52+00:00",
                                                          "created_at": "2018-01-06T16:06:52+00:00",
                                                          "message": "fix: Remove break-word behavior on coverage
",
                                                          "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                        },
                                                      },
                                                      "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                      "stats": Object {
                                                        "coverage": Object {
                                                          "diff_lines_covered": 0,
                                                          "diff_lines_uncovered": 0,
                                                          "lines_covered": 6127,
                                                          "lines_uncovered": 3060,
                                                        },
                                                        "style_violations": Object {
                                                          "count": 0,
                                                        },
                                                        "tests": Object {
                                                          "count": 153,
                                                          "count_unique": 153,
                                                          "duration": 14673,
                                                          "failures": 0,
                                                          "failures_unique": 0,
                                                        },
                                                        "webpack": Object {
                                                          "total_asset_size": 0,
                                                        },
                                                      },
                                                      "status": "finished",
                                                      "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                    },
                                                  ]
                                                }
                                              >
                                                <Duration
                                                  data={
                                                    Array [
                                                      Object {
                                                        "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                        "external_id": "325812408",
                                                        "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                        "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                        "label": "fix: Remove break-word behavior on coverage",
                                                        "number": 650,
                                                        "provider": "travis",
                                                        "repository": undefined,
                                                        "result": "passed",
                                                        "source": Object {
                                                          "author": Object {
                                                            "email": "dcramer@gmail.com",
                                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                            "name": "David Cramer",
                                                          },
                                                          "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                          "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                          "revision": Object {
                                                            "author": Object {
                                                              "email": "dcramer@gmail.com",
                                                              "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                              "name": "David Cramer",
                                                            },
                                                            "committed_at": "2018-01-06T16:06:52+00:00",
                                                            "created_at": "2018-01-06T16:06:52+00:00",
                                                            "message": "fix: Remove break-word behavior on coverage
",
                                                            "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                          },
                                                        },
                                                        "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                        "stats": Object {
                                                          "coverage": Object {
                                                            "diff_lines_covered": 0,
                                                            "diff_lines_uncovered": 0,
                                                            "lines_covered": 6127,
                                                            "lines_uncovered": 3060,
                                                          },
                                                          "style_violations": Object {
                                                            "count": 0,
                                                          },
                                                          "tests": Object {
                                                            "count": 153,
                                                            "count_unique": 153,
                                                            "duration": 14673,
                                                            "failures": 0,
                                                            "failures_unique": 0,
                                                          },
                                                          "webpack": Object {
                                                            "total_asset_size": 0,
                                                          },
                                                        },
                                                        "status": "finished",
                                                        "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                      },
                                                    ]
                                                  }
                                                  ms={227436}
                                                  short={true}
                                                >
                                                  <span>
                                                    4m
                                                  </span>
                                                </Duration>
                                              </AggregateDuration>
                                            </ObjectDuration>
                                          </div>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                  <Styled(Component)
                                    hide="sm"
                                    textAlign="right"
                                    width={120}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "eiLvyf",
                                            "rules": Array [
                                              "
  overflow: hidden;
  ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "Styled(Component)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hide="sm"
                                      textAlign="right"
                                      width={120}
                                    >
                                      <Component
                                        className="sc-ifAKCX eiLvyf"
                                        hide="sm"
                                        textAlign="right"
                                        width={120}
                                      >
                                        <styled.div
                                          className="sc-ifAKCX eiLvyf ResultGrid-Column"
                                          hide="sm"
                                          style={
                                            Object {
                                              "textAlign": "right",
                                            }
                                          }
                                          textAlign="right"
                                          width={120}
                                        >
                                          <div
                                            className="sc-ifAKCX eiLvyf ResultGrid-Column sc-bdVaJa dYmHol"
                                            style={
                                              Object {
                                                "textAlign": "right",
                                              }
                                            }
                                            width={120}
                                          >
                                            <TimeSince
                                              clock24Hours={false}
                                              date="2018-06-08T16:45:55+00:00"
                                              suffix="ago"
                                            >
                                              <time
                                                dateTime="2018-06-08T16:45:55.000Z"
                                                title="June 8, 2018 12:45 PM "
                                              >
                                                in 8 months
                                              </time>
                                            </TimeSince>
                                          </div>
                                        </styled.div>
                                      </Component>
                                    </StyledComponent>
                                  </Styled(Component)>
                                </div>
                              </styled.div>
                            </Styled(styled.div)>
                          </Component>
                        </StyledComponent>
                      </Styled(Component)>
                    </a>
                  </Link>
                </StyledComponent>
              </Styled(Link)>
            </BuildListItem>
          </RevisionListItem>
        </div>
      </div>
    </StyledComponent>
  </styled.div>
</RevisionList>
`;
