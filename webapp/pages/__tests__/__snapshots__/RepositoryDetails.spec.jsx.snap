// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RepositoryDetails renders with fetching repo 1`] = `
<RepositoryDetails
  error={false}
  loading={true}
  params={
    Object {
      "ownerName": "getsentry",
      "provider": "gh",
      "repoName": "zeus",
    }
  }
>
  <div>
    <Styled(PageLoadingIndicator)>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "jCQtUW",
              "rules": Array [
                "
  @keyframes pageLoadingAnim {
    0% {
      opacity: 0;
    }
    50% {
      background-color: #7b6be6;
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
",
              ],
            },
            "displayName": "Styled(PageLoadingIndicator)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <PageLoadingIndicator
          className="sc-bdVaJa jCQtUW"
        >
          <div
            style={
              Object {
                "display": "block",
                "height": 4,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
                "width": "100%",
              }
            }
          >
            <span
              key="0"
              style={
                Object {
                  "animationDelay": "0.02s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "0%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="1"
              style={
                Object {
                  "animationDelay": "0.04s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "2%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="2"
              style={
                Object {
                  "animationDelay": "0.06s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "4%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="3"
              style={
                Object {
                  "animationDelay": "0.08s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "6%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="4"
              style={
                Object {
                  "animationDelay": "0.1s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "8%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="5"
              style={
                Object {
                  "animationDelay": "0.12s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "10%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="6"
              style={
                Object {
                  "animationDelay": "0.14s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "12%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="7"
              style={
                Object {
                  "animationDelay": "0.16s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "14%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="8"
              style={
                Object {
                  "animationDelay": "0.18s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "16%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="9"
              style={
                Object {
                  "animationDelay": "0.2s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "18%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="10"
              style={
                Object {
                  "animationDelay": "0.22s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "20%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="11"
              style={
                Object {
                  "animationDelay": "0.24s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "22%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="12"
              style={
                Object {
                  "animationDelay": "0.26s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "24%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="13"
              style={
                Object {
                  "animationDelay": "0.28s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "26%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="14"
              style={
                Object {
                  "animationDelay": "0.3s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "28%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="15"
              style={
                Object {
                  "animationDelay": "0.32s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "30%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="16"
              style={
                Object {
                  "animationDelay": "0.34s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "32%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="17"
              style={
                Object {
                  "animationDelay": "0.36s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "34%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="18"
              style={
                Object {
                  "animationDelay": "0.38s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "36%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="19"
              style={
                Object {
                  "animationDelay": "0.4s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "38%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="20"
              style={
                Object {
                  "animationDelay": "0.42s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "40%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="21"
              style={
                Object {
                  "animationDelay": "0.44s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "42%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="22"
              style={
                Object {
                  "animationDelay": "0.46s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "44%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="23"
              style={
                Object {
                  "animationDelay": "0.48s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "46%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="24"
              style={
                Object {
                  "animationDelay": "0.5s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "48%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="25"
              style={
                Object {
                  "animationDelay": "0.52s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "50%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="26"
              style={
                Object {
                  "animationDelay": "0.54s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "52%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="27"
              style={
                Object {
                  "animationDelay": "0.56s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "54%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="28"
              style={
                Object {
                  "animationDelay": "0.58s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "56%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="29"
              style={
                Object {
                  "animationDelay": "0.6s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "58%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="30"
              style={
                Object {
                  "animationDelay": "0.62s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "60%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="31"
              style={
                Object {
                  "animationDelay": "0.64s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "62%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="32"
              style={
                Object {
                  "animationDelay": "0.66s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "64%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="33"
              style={
                Object {
                  "animationDelay": "0.68s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "66%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="34"
              style={
                Object {
                  "animationDelay": "0.7000000000000001s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "68%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="35"
              style={
                Object {
                  "animationDelay": "0.72s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "70%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="36"
              style={
                Object {
                  "animationDelay": "0.74s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "72%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="37"
              style={
                Object {
                  "animationDelay": "0.76s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "74%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="38"
              style={
                Object {
                  "animationDelay": "0.78s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "76%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="39"
              style={
                Object {
                  "animationDelay": "0.8s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "78%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="40"
              style={
                Object {
                  "animationDelay": "0.8200000000000001s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "80%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="41"
              style={
                Object {
                  "animationDelay": "0.84s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "82%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="42"
              style={
                Object {
                  "animationDelay": "0.86s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "84%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="43"
              style={
                Object {
                  "animationDelay": "0.88s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "86%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="44"
              style={
                Object {
                  "animationDelay": "0.9s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "88%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="45"
              style={
                Object {
                  "animationDelay": "0.92s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "90%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="46"
              style={
                Object {
                  "animationDelay": "0.9400000000000001s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "92%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="47"
              style={
                Object {
                  "animationDelay": "0.96s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "94%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="48"
              style={
                Object {
                  "animationDelay": "0.98s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "96%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
            <span
              key="49"
              style={
                Object {
                  "animationDelay": "1s",
                  "animationDuration": "1s",
                  "animationIterationCount": "infinite",
                  "animationName": "pageLoadingAnim",
                  "animationTimingFunction": "ease",
                  "background": "#fff",
                  "borderRadius": 0,
                  "display": "inline-block",
                  "height": 4,
                  "left": "98%",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "2%",
                }
              }
            />
          </div>
        </PageLoadingIndicator>
      </StyledComponent>
    </Styled(PageLoadingIndicator)>
  </div>
</RepositoryDetails>
`;

exports[`RepositoryDetails renders with repo in context 1`] = `
<RepositoryDetails
  error={false}
  loading={true}
  params={
    Object {
      "ownerName": "getsentry",
      "provider": "gh",
      "repoName": "zeus",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="getsentry/zeus"
  >
    <DocumentTitle
      title="getsentry/zeus"
    >
      <div>
        <RepositoryHeader>
          <Connect(Styled(UnstyledHeader))>
            <Styled(UnstyledHeader)
              isAuthenticated={null}
              logout={[Function]}
              user={null}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": false,
                      "lastClassName": "fxJQtR",
                      "rules": Array [
                        "
  background: #fff;
  padding: 10px 0 10px;
  margin: 0 20px 20px;
  border-bottom: 4px solid #111;

  .Repo-Selector {
    display: inline-block;
    width: 100%;
    max-width: 300px;
    cursor: pointer;
    margin-right: 20px;
    /* float: left;
    font-size: 24px;
    margin: 0;
    line-height: 36px;
    letter-spacing: -1px;
    text-transform: uppercase;
    font-weight: 500; */
  }
",
                      ],
                    },
                    "displayName": "Styled(UnstyledHeader)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                isAuthenticated={null}
                logout={[Function]}
                user={null}
              >
                <UnstyledHeader
                  className="sc-bxivhb fxJQtR"
                  isAuthenticated={null}
                  logout={[Function]}
                  user={null}
                >
                  <div
                    className="sc-bxivhb fxJQtR"
                  >
                    <div
                      style={
                        Object {
                          "float": "left",
                          "marginRight": 10,
                        }
                      }
                    >
                      <Styled(Link)
                        to="/"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htpNat",
                                "isStatic": false,
                                "lastClassName": "hOejMi",
                                "rules": Array [
                                  "
  display: inline-block;
  width: 26px;
  height: 26px;
  margin: 5px 0;
  margin-right: 10px;
  cursor: pointer;
  vertical-align: middle;

  &:last-child {
    margin-right: 0;
  }
",
                                ],
                              },
                              "displayName": "Styled(Link)",
                              "foldedComponentIds": Array [],
                              "getDefaultProps": [Function],
                              "render": [Function],
                              "styledComponentId": "sc-htpNat",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          to="/"
                        >
                          <Link
                            className="sc-htpNat hOejMi"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/"
                          >
                            <a
                              className="sc-htpNat hOejMi"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <LogoIcon
                                color="#111111"
                                size="26"
                              >
                                <IconBase
                                  color="#111111"
                                  size="26"
                                  viewBox="0 0 31 20"
                                >
                                  <svg
                                    fill="currentColor"
                                    height="26"
                                    preserveAspectRatio="xMidYMid meet"
                                    style={
                                      Object {
                                        "color": "#111111",
                                        "verticalAlign": "middle",
                                      }
                                    }
                                    viewBox="0 0 31 20"
                                    width="26"
                                  >
                                    <g
                                      fill="#111111"
                                    >
                                      <path
                                        d="M4.89681425,0.000171191628 L3.11788867,1.94050602 L3.39546367,1.94270705 L22.1969511,1.94270705 L15.3534435,9.40861852 L12.5312272,6.32961481 L0,19.9997554 L0,20 L10.9645792,20 L13.4446568,20 L30.5435212,20 L20.7484253,9.31421857 L18.0093593,12.3059145 L16.6713744,10.8461391 L26.6134505,0.000171191628 L4.89681425,0.000171191628 Z M12.5312272,9.56122363 L13.8723913,11.0241784 L7.49819332,17.8165731 L4.9640681,17.8165731 L12.5312272,9.56122363 Z M15.1900777,12.4616989 L16.5290408,13.9226972 L12.9638529,17.8165731 L10.1631578,17.8165731 L15.1900777,12.4616989 Z M20.7494036,12.5470502 L25.5796977,17.8165731 L15.9247344,17.8165731 L20.7494036,12.5470502 Z"
                                      />
                                    </g>
                                  </svg>
                                </IconBase>
                              </LogoIcon>
                            </a>
                          </Link>
                        </StyledComponent>
                      </Styled(Link)>
                    </div>
                    <Select
                      addLabelText="Add \\"{label}\\"?"
                      arrowRenderer={[Function]}
                      autosize={true}
                      backspaceRemoves={true}
                      backspaceToRemoveMessage="Press backspace to remove {label}"
                      className="Repo-Selector"
                      clearAllText="Clear all"
                      clearRenderer={[Function]}
                      clearValueText="Clear value"
                      clearable={false}
                      closeOnSelect={true}
                      deleteRemoves={true}
                      delimiter=","
                      disabled={false}
                      escapeClearsValue={true}
                      filterOptions={[Function]}
                      ignoreAccents={true}
                      ignoreCase={true}
                      inputProps={Object {}}
                      isLoading={false}
                      joinValues={false}
                      labelKey="label"
                      matchPos="any"
                      matchProp="any"
                      menuBuffer={0}
                      menuRenderer={[Function]}
                      multi={false}
                      noResultsText="No results found"
                      onBlurResetsInput={true}
                      onChange={[Function]}
                      onCloseResetsInput={true}
                      onSelectResetsInput={true}
                      openOnClick={true}
                      optionComponent={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "getsentry / zeus",
                            "value": "gh/getsentry/zeus",
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder="Select Repository"
                      required={false}
                      scrollMenuIntoView={true}
                      searchable={true}
                      simpleValue={false}
                      tabSelectsValue={true}
                      value={
                        Object {
                          "label": "getsentry / zeus",
                          "value": "gh/getsentry/zeus",
                        }
                      }
                      valueComponent={[Function]}
                      valueKey="value"
                    >
                      <div
                        className="Select Repo-Selector Select--single is-searchable has-value"
                      >
                        <div
                          className="Select-control"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                        >
                          <span
                            className="Select-multi-value-wrapper"
                            id="react-select-2--value"
                          >
                            <Value
                              disabled={false}
                              id="react-select-2--value-item"
                              instancePrefix="react-select-2-"
                              onClick={null}
                              value={
                                Object {
                                  "label": "getsentry / zeus",
                                  "value": "gh/getsentry/zeus",
                                }
                              }
                            >
                              <div
                                className="Select-value"
                              >
                                <span
                                  aria-selected="true"
                                  className="Select-value-label"
                                  id="react-select-2--value-item"
                                  role="option"
                                >
                                  getsentry / zeus
                                </span>
                              </div>
                            </Value>
                            <AutosizeInput
                              aria-activedescendant="react-select-2--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-owns=""
                              className="Select-input"
                              minWidth="5"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              value=""
                            >
                              <div
                                className="Select-input"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <style
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "input#undefined::-ms-clear {display: none;}",
                                    }
                                  }
                                />
                                <input
                                  aria-activedescendant="react-select-2--value"
                                  aria-expanded="false"
                                  aria-haspopup="false"
                                  aria-owns=""
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  role="combobox"
                                  style={
                                    Object {
                                      "boxSizing": "content-box",
                                      "width": "5px",
                                    }
                                  }
                                  value=""
                                />
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "left": 0,
                                      "overflow": "scroll",
                                      "position": "absolute",
                                      "top": 0,
                                      "visibility": "hidden",
                                      "whiteSpace": "pre",
                                    }
                                  }
                                />
                              </div>
                            </AutosizeInput>
                          </span>
                          <span
                            className="Select-arrow-zone"
                            onMouseDown={[Function]}
                          >
                            <span
                              className="Select-arrow"
                              onMouseDown={[Function]}
                            />
                          </span>
                        </div>
                      </div>
                    </Select>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
                              "lastClassName": "kmbVwf",
                              "rules": Array [
                                "
  display: inline-block;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-ifAKCX kmbVwf"
                        >
                          <Styled(Link)
                            activeClassName="active"
                            onlyActiveOnIndex={true}
                            to="/gh/getsentry/zeus"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onlyActiveOnIndex={true}
                              to="/gh/getsentry/zeus"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={true}
                                style={Object {}}
                                to="/gh/getsentry/zeus"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Overview
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/revisions"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/revisions"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/revisions"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Commits
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/change-requests"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/change-requests"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/change-requests"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Change Requests
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/builds"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/builds"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/builds"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Builds
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/coverage"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/coverage"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/coverage"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Coverage
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/tests"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/tests"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/tests"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Tests
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/stats"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/stats"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/stats"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Stats
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                          <Styled(Link)
                            activeClassName="active"
                            to="/gh/getsentry/zeus/settings"
                          >
                            <StyledComponent
                              activeClassName="active"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "_foldedDefaultProps": Object {
                                    "activeClassName": "active",
                                  },
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": false,
                                    "lastClassName": "bQcYwP",
                                    "rules": Array [
                                      "
  cursor: pointer;
  float: left;
  font-size: 15px;
  color: #333;
  margin-left: 10px;
  padding: 5px 10px;
  border: 3px solid #fff;
  border-radius: 4px;

  &:hover {
    color: #333;
  }

  &.active,
  .",
                                      [Function],
                                      " {
    border-color: #7b6be6;
    color: #7b6be6;
  }
",
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "getDefaultProps": [Function],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/gh/getsentry/zeus/settings"
                            >
                              <Link
                                activeClassName="active"
                                className="sc-EHOje bQcYwP"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/gh/getsentry/zeus/settings"
                              >
                                <a
                                  className="sc-EHOje bQcYwP"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  Settings
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <div
                      style={
                        Object {
                          "clear": "both",
                        }
                      }
                    />
                  </div>
                </UnstyledHeader>
              </StyledComponent>
            </Styled(UnstyledHeader)>
          </Connect(Styled(UnstyledHeader))>
        </RepositoryHeader>
        <_default>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "dAlNgz",
                    "rules": Array [
                      "
  background: #fff;
  margin: 0 20px;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bwzfXH dAlNgz"
              />
            </StyledComponent>
          </styled.div>
        </_default>
      </div>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</RepositoryDetails>
`;
