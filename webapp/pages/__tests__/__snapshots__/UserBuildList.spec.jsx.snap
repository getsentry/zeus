// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserBuildList fetches builds 1`] = `
<RepositoryContext
  error={false}
  loading={false}
  repoList={
    Array [
      Object {
        "backend": "git",
        "created_at": "2017-08-15T17:01:33.206772+00:00",
        "full_name": "gh/getsentry/zeus",
        "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
        "latest_build": null,
        "name": "zeus",
        "owner_name": "getsentry",
        "permissions": Object {
          "admin": true,
          "read": true,
          "write": true,
        },
        "provider": "gh",
        "url": "git@github.com:getsentry/zeus.git",
      },
    ]
  }
>
  <Connect(Connect(StreamSubscription))
    location={
      Object {
        "pathame": "/mock-pathname/",
        "query": Object {},
      }
    }
    params={Object {}}
  >
    <Connect(StreamSubscription)
      buildList={Array []}
      loading={true}
      location={
        Object {
          "pathame": "/mock-pathname/",
          "query": Object {},
        }
      }
      params={Object {}}
    >
      <StreamSubscription
        buildList={Array []}
        loading={true}
        location={
          Object {
            "pathame": "/mock-pathname/",
            "query": Object {},
          }
        }
        params={Object {}}
        subscribe={[Function]}
        unsubscribe={[Function]}
      >
        <UserBuildList
          buildList={Array []}
          loading={true}
          location={
            Object {
              "pathame": "/mock-pathname/",
              "query": Object {},
            }
          }
          params={Object {}}
          subscribe={[Function]}
          unsubscribe={[Function]}
        >
          <SideEffect(DocumentTitle)
            title="My Builds"
          >
            <DocumentTitle
              title="My Builds"
            >
              <Layout
                title="My Builds"
              >
                <div>
                  <Connect(Styled(UnstyledHeader))>
                    <Styled(UnstyledHeader)
                      isAuthenticated={true}
                      logout={[Function]}
                      user={
                        Object {
                          "created_at": "2018-01-06T16:07:16.814650+00:00",
                          "email": "dcramer@gmail.com",
                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                        }
                      }
                    >
                      <UnstyledHeader
                        className="sc-cSHVUG dTFQqZ"
                        isAuthenticated={true}
                        logout={[Function]}
                        user={
                          Object {
                            "created_at": "2018-01-06T16:07:16.814650+00:00",
                            "email": "dcramer@gmail.com",
                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                          }
                        }
                      >
                        <div
                          className="sc-cSHVUG dTFQqZ"
                        >
                          <div
                            style={
                              Object {
                                "float": "left",
                                "marginRight": 10,
                              }
                            }
                          >
                            <Styled(Link)
                              to="/"
                            >
                              <Link
                                className="sc-jzJRlG eRNUwX"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/"
                              >
                                <a
                                  className="sc-jzJRlG eRNUwX"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <LogoIcon
                                    color="#111111"
                                    size="26"
                                  >
                                    <IconBase
                                      color="#111111"
                                      size="26"
                                      viewBox="0 0 31 20"
                                    >
                                      <svg
                                        fill="currentColor"
                                        height="26"
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "color": "#111111",
                                            "verticalAlign": "middle",
                                          }
                                        }
                                        viewBox="0 0 31 20"
                                        width="26"
                                      >
                                        <g
                                          fill="#111111"
                                        >
                                          <path
                                            d="M4.89681425,0.000171191628 L3.11788867,1.94050602 L3.39546367,1.94270705 L22.1969511,1.94270705 L15.3534435,9.40861852 L12.5312272,6.32961481 L0,19.9997554 L0,20 L10.9645792,20 L13.4446568,20 L30.5435212,20 L20.7484253,9.31421857 L18.0093593,12.3059145 L16.6713744,10.8461391 L26.6134505,0.000171191628 L4.89681425,0.000171191628 Z M12.5312272,9.56122363 L13.8723913,11.0241784 L7.49819332,17.8165731 L4.9640681,17.8165731 L12.5312272,9.56122363 Z M15.1900777,12.4616989 L16.5290408,13.9226972 L12.9638529,17.8165731 L10.1631578,17.8165731 L15.1900777,12.4616989 Z M20.7494036,12.5470502 L25.5796977,17.8165731 L15.9247344,17.8165731 L20.7494036,12.5470502 Z"
                                          />
                                        </g>
                                      </svg>
                                    </IconBase>
                                  </LogoIcon>
                                </a>
                              </Link>
                            </Styled(Link)>
                          </div>
                          <div
                            style={
                              Object {
                                "float": "right",
                              }
                            }
                          >
                            <Styled(Link)
                              to="/settings"
                            >
                              <Link
                                className="sc-jzJRlG eRNUwX"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/settings"
                              >
                                <a
                                  className="sc-jzJRlG eRNUwX"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <MdSettings
                                    size={24}
                                  >
                                    <IconBase
                                      size={24}
                                      viewBox="0 0 40 40"
                                    >
                                      <svg
                                        fill="currentColor"
                                        height={24}
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "color": undefined,
                                            "verticalAlign": "middle",
                                          }
                                        }
                                        viewBox="0 0 40 40"
                                        width={24}
                                      >
                                        <g>
                                          <path
                                            d="m20 25.9c3.2 0 5.9-2.7 5.9-5.9s-2.7-5.9-5.9-5.9-5.9 2.7-5.9 5.9 2.7 5.9 5.9 5.9z m12.4-4.3l3.5 2.8c0.4 0.2 0.4 0.7 0.2 1.1l-3.4 5.8c-0.2 0.3-0.6 0.4-1 0.3l-4.1-1.7c-0.9 0.7-1.8 1.3-2.8 1.7l-0.7 4.3c0 0.4-0.4 0.7-0.7 0.7h-6.8c-0.4 0-0.7-0.3-0.7-0.7l-0.7-4.3c-1-0.4-1.9-1-2.8-1.7l-4.1 1.7c-0.4 0.1-0.8 0-1-0.3l-3.4-5.8c-0.2-0.4-0.2-0.9 0.2-1.1l3.5-2.8c-0.1-0.5-0.1-1.1-0.1-1.6s0-1.1 0.1-1.6l-3.5-2.8c-0.4-0.2-0.4-0.7-0.2-1.1l3.4-5.7c0.2-0.4 0.6-0.5 1-0.4l4.1 1.7c0.9-0.6 1.8-1.3 2.8-1.7l0.7-4.3c0-0.4 0.3-0.7 0.7-0.7h6.8c0.3 0 0.7 0.3 0.7 0.7l0.7 4.3c1 0.4 1.9 1 2.8 1.7l4.1-1.7c0.4-0.1 0.8 0 1 0.4l3.4 5.7c0.2 0.4 0.2 0.9-0.2 1.1l-3.5 2.8c0.1 0.5 0.1 1.1 0.1 1.6s0 1.1-0.1 1.6z"
                                          />
                                        </g>
                                      </svg>
                                    </IconBase>
                                  </MdSettings>
                                </a>
                              </Link>
                            </Styled(Link)>
                            <Styled(Link)
                              onClick={[Function]}
                            >
                              <Link
                                className="sc-jzJRlG eRNUwX"
                                onClick={[Function]}
                                onlyActiveOnIndex={false}
                                style={Object {}}
                              >
                                <a
                                  className="sc-jzJRlG eRNUwX"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <MdExitToApp
                                    size={24}
                                  >
                                    <IconBase
                                      size={24}
                                      viewBox="0 0 40 40"
                                    >
                                      <svg
                                        fill="currentColor"
                                        height={24}
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "color": undefined,
                                            "verticalAlign": "middle",
                                          }
                                        }
                                        viewBox="0 0 40 40"
                                        width={24}
                                      >
                                        <g>
                                          <path
                                            d="m31.6 5q1.4 0 2.4 1t1 2.4v23.2q0 1.4-1 2.4t-2.4 1h-23.2q-1.4 0-2.4-1t-1-2.4v-6.6h3.4v6.6h23.2v-23.2h-23.2v6.6h-3.4v-6.6q0-1.4 1-2.4t2.4-1h23.2z m-14.8 21l4.3-4.4h-16.1v-3.2h16.1l-4.3-4.4 2.3-2.4 8.4 8.4-8.4 8.4z"
                                          />
                                        </g>
                                      </svg>
                                    </IconBase>
                                  </MdExitToApp>
                                </a>
                              </Link>
                            </Styled(Link)>
                          </div>
                          <Select
                            addLabelText="Add \\"{label}\\"?"
                            arrowRenderer={[Function]}
                            autosize={true}
                            backspaceRemoves={true}
                            backspaceToRemoveMessage="Press backspace to remove {label}"
                            className="Repo-Selector"
                            clearAllText="Clear all"
                            clearRenderer={[Function]}
                            clearValueText="Clear value"
                            clearable={false}
                            closeOnSelect={true}
                            deleteRemoves={true}
                            delimiter=","
                            disabled={false}
                            escapeClearsValue={true}
                            filterOptions={[Function]}
                            ignoreAccents={true}
                            ignoreCase={true}
                            inputProps={Object {}}
                            isLoading={false}
                            joinValues={false}
                            labelKey="label"
                            matchPos="any"
                            matchProp="any"
                            menuBuffer={0}
                            menuRenderer={[Function]}
                            multi={false}
                            noResultsText="No results found"
                            onBlurResetsInput={true}
                            onChange={[Function]}
                            onCloseResetsInput={true}
                            onSelectResetsInput={true}
                            openOnClick={true}
                            optionComponent={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "getsentry / zeus",
                                  "value": "gh/getsentry/zeus",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select Repository"
                            required={false}
                            scrollMenuIntoView={true}
                            searchable={true}
                            simpleValue={false}
                            tabSelectsValue={true}
                            value={null}
                            valueComponent={[Function]}
                            valueKey="value"
                          >
                            <div
                              className="Select Repo-Selector Select--single is-searchable"
                            >
                              <div
                                className="Select-control"
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                              >
                                <span
                                  className="Select-multi-value-wrapper"
                                  id="react-select-2--value"
                                >
                                  <div
                                    className="Select-placeholder"
                                  >
                                    Select Repository
                                  </div>
                                  <AutosizeInput
                                    aria-activedescendant="react-select-2--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    className="Select-input"
                                    minWidth="5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    value=""
                                  >
                                    <div
                                      className="Select-input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                        }
                                      }
                                    >
                                      <style
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "input#undefined::-ms-clear {display: none;}",
                                          }
                                        }
                                      />
                                      <input
                                        aria-activedescendant="react-select-2--value"
                                        aria-expanded="false"
                                        aria-haspopup="false"
                                        aria-owns=""
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        role="combobox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "5px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </span>
                                <span
                                  className="Select-arrow-zone"
                                  onMouseDown={[Function]}
                                >
                                  <span
                                    className="Select-arrow"
                                    onMouseDown={[Function]}
                                  />
                                </span>
                              </div>
                            </div>
                          </Select>
                          <div
                            style={
                              Object {
                                "clear": "both",
                              }
                            }
                          />
                        </div>
                      </UnstyledHeader>
                    </Styled(UnstyledHeader)>
                  </Connect(Styled(UnstyledHeader))>
                  <styled.div>
                    <div
                      className="sc-fjdhpX cyaOdX"
                    >
                      <styled.div>
                        <div
                          className="sc-kpOJdX fNSmRS"
                        >
                          <BuildListBody
                            buildList={Array []}
                            error={false}
                            loading={true}
                            location={
                              Object {
                                "pathame": "/mock-pathname/",
                                "query": Object {},
                              }
                            }
                            params={Object {}}
                            subscribe={[Function]}
                            unsubscribe={[Function]}
                          >
                            <PageLoadingIndicator>
                              <div
                                style={
                                  Object {
                                    "display": "block",
                                    "height": 4,
                                    "left": 0,
                                    "position": "fixed",
                                    "right": 0,
                                    "top": 0,
                                    "width": "100%",
                                  }
                                }
                              >
                                <span
                                  key="0"
                                  style={
                                    Object {
                                      "animationDelay": "0.02s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "0%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="1"
                                  style={
                                    Object {
                                      "animationDelay": "0.04s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "2%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="2"
                                  style={
                                    Object {
                                      "animationDelay": "0.06s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "4%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="3"
                                  style={
                                    Object {
                                      "animationDelay": "0.08s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "6%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="4"
                                  style={
                                    Object {
                                      "animationDelay": "0.1s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "8%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="5"
                                  style={
                                    Object {
                                      "animationDelay": "0.12s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "10%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="6"
                                  style={
                                    Object {
                                      "animationDelay": "0.14s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "12%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="7"
                                  style={
                                    Object {
                                      "animationDelay": "0.16s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "14%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="8"
                                  style={
                                    Object {
                                      "animationDelay": "0.18s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "16%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="9"
                                  style={
                                    Object {
                                      "animationDelay": "0.2s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "18%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="10"
                                  style={
                                    Object {
                                      "animationDelay": "0.22s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "20%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="11"
                                  style={
                                    Object {
                                      "animationDelay": "0.24s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "22%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="12"
                                  style={
                                    Object {
                                      "animationDelay": "0.26s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "24%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="13"
                                  style={
                                    Object {
                                      "animationDelay": "0.28s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "26%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="14"
                                  style={
                                    Object {
                                      "animationDelay": "0.3s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "28%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="15"
                                  style={
                                    Object {
                                      "animationDelay": "0.32s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "30%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="16"
                                  style={
                                    Object {
                                      "animationDelay": "0.34s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "32%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="17"
                                  style={
                                    Object {
                                      "animationDelay": "0.36s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "34%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="18"
                                  style={
                                    Object {
                                      "animationDelay": "0.38s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "36%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="19"
                                  style={
                                    Object {
                                      "animationDelay": "0.4s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "38%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="20"
                                  style={
                                    Object {
                                      "animationDelay": "0.42s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "40%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="21"
                                  style={
                                    Object {
                                      "animationDelay": "0.44s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "42%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="22"
                                  style={
                                    Object {
                                      "animationDelay": "0.46s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "44%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="23"
                                  style={
                                    Object {
                                      "animationDelay": "0.48s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "46%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="24"
                                  style={
                                    Object {
                                      "animationDelay": "0.5s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "48%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="25"
                                  style={
                                    Object {
                                      "animationDelay": "0.52s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "50%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="26"
                                  style={
                                    Object {
                                      "animationDelay": "0.54s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "52%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="27"
                                  style={
                                    Object {
                                      "animationDelay": "0.56s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "54%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="28"
                                  style={
                                    Object {
                                      "animationDelay": "0.58s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "56%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="29"
                                  style={
                                    Object {
                                      "animationDelay": "0.6s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "58%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="30"
                                  style={
                                    Object {
                                      "animationDelay": "0.62s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "60%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="31"
                                  style={
                                    Object {
                                      "animationDelay": "0.64s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "62%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="32"
                                  style={
                                    Object {
                                      "animationDelay": "0.66s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "64%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="33"
                                  style={
                                    Object {
                                      "animationDelay": "0.68s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "66%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="34"
                                  style={
                                    Object {
                                      "animationDelay": "0.7000000000000001s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "68%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="35"
                                  style={
                                    Object {
                                      "animationDelay": "0.72s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "70%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="36"
                                  style={
                                    Object {
                                      "animationDelay": "0.74s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "72%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="37"
                                  style={
                                    Object {
                                      "animationDelay": "0.76s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "74%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="38"
                                  style={
                                    Object {
                                      "animationDelay": "0.78s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "76%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="39"
                                  style={
                                    Object {
                                      "animationDelay": "0.8s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "78%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="40"
                                  style={
                                    Object {
                                      "animationDelay": "0.8200000000000001s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "80%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="41"
                                  style={
                                    Object {
                                      "animationDelay": "0.84s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "82%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="42"
                                  style={
                                    Object {
                                      "animationDelay": "0.86s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "84%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="43"
                                  style={
                                    Object {
                                      "animationDelay": "0.88s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "86%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="44"
                                  style={
                                    Object {
                                      "animationDelay": "0.9s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "88%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="45"
                                  style={
                                    Object {
                                      "animationDelay": "0.92s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "90%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="46"
                                  style={
                                    Object {
                                      "animationDelay": "0.9400000000000001s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "92%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="47"
                                  style={
                                    Object {
                                      "animationDelay": "0.96s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "94%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="48"
                                  style={
                                    Object {
                                      "animationDelay": "0.98s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "96%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                                <span
                                  key="49"
                                  style={
                                    Object {
                                      "animationDelay": "1s",
                                      "animationDuration": "1s",
                                      "animationIterationCount": "infinite",
                                      "animationName": "pageLoadingAnim",
                                      "animationTimingFunction": "ease",
                                      "background": "#fff",
                                      "borderRadius": 0,
                                      "display": "inline-block",
                                      "height": 4,
                                      "left": "98%",
                                      "opacity": 0,
                                      "position": "absolute",
                                      "width": "2%",
                                    }
                                  }
                                />
                              </div>
                            </PageLoadingIndicator>
                          </BuildListBody>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                  <Styled(UnstyledFooter)>
                    <UnstyledFooter
                      className="sc-kAzzGY eptMiq"
                    >
                      <div
                        className="sc-kAzzGY eptMiq"
                      >
                        <div>
                          <a
                            href="https://github.com/getsentry/zeus"
                            style={
                              Object {
                                "color": "inherit",
                                "fontWeight": 500,
                              }
                            }
                          >
                            Zeus
                          </a>
                           
                          is Open Source Software
                          <br />
                          <small>
                            Build 
                            unknown
                          </small>
                        </div>
                        <div
                          style={
                            Object {
                              "clear": "both",
                            }
                          }
                        />
                      </div>
                    </UnstyledFooter>
                  </Styled(UnstyledFooter)>
                </div>
              </Layout>
            </DocumentTitle>
          </SideEffect(DocumentTitle)>
        </UserBuildList>
      </StreamSubscription>
    </Connect(StreamSubscription)>
  </Connect(Connect(StreamSubscription))>
</RepositoryContext>
`;

exports[`UserBuildList renders with pre-existing builds loaded 1`] = `
<RepositoryContext
  error={false}
  loading={false}
  repoList={
    Array [
      Object {
        "backend": "git",
        "created_at": "2017-08-15T17:01:33.206772+00:00",
        "full_name": "gh/getsentry/zeus",
        "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
        "latest_build": null,
        "name": "zeus",
        "owner_name": "getsentry",
        "permissions": Object {
          "admin": true,
          "read": true,
          "write": true,
        },
        "provider": "gh",
        "url": "git@github.com:getsentry/zeus.git",
      },
    ]
  }
>
  <Connect(Connect(StreamSubscription))
    location={
      Object {
        "pathame": "/mock-pathname/",
        "query": Object {},
      }
    }
    params={Object {}}
  >
    <Connect(StreamSubscription)
      buildList={
        Array [
          Object {
            "created_at": "2018-01-06T16:07:16.830829+00:00",
            "external_id": "325812408",
            "finished_at": "2018-01-06T16:11:04.393590+00:00",
            "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
            "label": "fix: Remove break-word behavior on coverage",
            "number": 650,
            "provider": "travis-ci",
            "repository": Object {
              "backend": "git",
              "created_at": "2017-08-15T17:01:33.206772+00:00",
              "full_name": "gh/getsentry/zeus",
              "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
              "latest_build": null,
              "name": "zeus",
              "owner_name": "getsentry",
              "permissions": Object {
                "admin": true,
                "read": true,
                "write": true,
              },
              "provider": "gh",
              "url": "git@github.com:getsentry/zeus.git",
            },
            "result": "passed",
            "source": Object {
              "author": Object {
                "email": "dcramer@gmail.com",
                "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                "name": "David Cramer",
              },
              "created_at": "2018-01-06T16:07:16.814650+00:00",
              "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
              "revision": Object {
                "author": Object {
                  "email": "dcramer@gmail.com",
                  "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                  "name": "David Cramer",
                },
                "committed_at": "2018-01-06T16:06:52+00:00",
                "created_at": "2018-01-06T16:06:52+00:00",
                "message": "fix: Remove break-word behavior on coverage
",
                "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
              },
            },
            "started_at": "2018-01-06T16:07:16.957093+00:00",
            "stats": Object {
              "coverage": Object {
                "diff_lines_covered": 0,
                "diff_lines_uncovered": 0,
                "lines_covered": 6127,
                "lines_uncovered": 3060,
              },
              "style_violations": Object {
                "count": 0,
              },
              "tests": Object {
                "count": 153,
                "count_unique": 153,
                "duration": 14673,
                "failures": 0,
                "failures_unique": 0,
              },
              "webpack": Object {
                "total_asset_size": 0,
              },
            },
            "status": "finished",
            "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
          },
        ]
      }
      links={Object {}}
      loading={false}
      location={
        Object {
          "pathame": "/mock-pathname/",
          "query": Object {},
        }
      }
      params={Object {}}
    >
      <StreamSubscription
        buildList={
          Array [
            Object {
              "created_at": "2018-01-06T16:07:16.830829+00:00",
              "external_id": "325812408",
              "finished_at": "2018-01-06T16:11:04.393590+00:00",
              "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
              "label": "fix: Remove break-word behavior on coverage",
              "number": 650,
              "provider": "travis-ci",
              "repository": Object {
                "backend": "git",
                "created_at": "2017-08-15T17:01:33.206772+00:00",
                "full_name": "gh/getsentry/zeus",
                "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                "latest_build": null,
                "name": "zeus",
                "owner_name": "getsentry",
                "permissions": Object {
                  "admin": true,
                  "read": true,
                  "write": true,
                },
                "provider": "gh",
                "url": "git@github.com:getsentry/zeus.git",
              },
              "result": "passed",
              "source": Object {
                "author": Object {
                  "email": "dcramer@gmail.com",
                  "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                  "name": "David Cramer",
                },
                "created_at": "2018-01-06T16:07:16.814650+00:00",
                "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                "revision": Object {
                  "author": Object {
                    "email": "dcramer@gmail.com",
                    "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                    "name": "David Cramer",
                  },
                  "committed_at": "2018-01-06T16:06:52+00:00",
                  "created_at": "2018-01-06T16:06:52+00:00",
                  "message": "fix: Remove break-word behavior on coverage
",
                  "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                },
              },
              "started_at": "2018-01-06T16:07:16.957093+00:00",
              "stats": Object {
                "coverage": Object {
                  "diff_lines_covered": 0,
                  "diff_lines_uncovered": 0,
                  "lines_covered": 6127,
                  "lines_uncovered": 3060,
                },
                "style_violations": Object {
                  "count": 0,
                },
                "tests": Object {
                  "count": 153,
                  "count_unique": 153,
                  "duration": 14673,
                  "failures": 0,
                  "failures_unique": 0,
                },
                "webpack": Object {
                  "total_asset_size": 0,
                },
              },
              "status": "finished",
              "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
            },
          ]
        }
        links={Object {}}
        loading={false}
        location={
          Object {
            "pathame": "/mock-pathname/",
            "query": Object {},
          }
        }
        params={Object {}}
        subscribe={[Function]}
        unsubscribe={[Function]}
      >
        <UserBuildList
          buildList={
            Array [
              Object {
                "created_at": "2018-01-06T16:07:16.830829+00:00",
                "external_id": "325812408",
                "finished_at": "2018-01-06T16:11:04.393590+00:00",
                "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                "label": "fix: Remove break-word behavior on coverage",
                "number": 650,
                "provider": "travis-ci",
                "repository": Object {
                  "backend": "git",
                  "created_at": "2017-08-15T17:01:33.206772+00:00",
                  "full_name": "gh/getsentry/zeus",
                  "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                  "latest_build": null,
                  "name": "zeus",
                  "owner_name": "getsentry",
                  "permissions": Object {
                    "admin": true,
                    "read": true,
                    "write": true,
                  },
                  "provider": "gh",
                  "url": "git@github.com:getsentry/zeus.git",
                },
                "result": "passed",
                "source": Object {
                  "author": Object {
                    "email": "dcramer@gmail.com",
                    "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                    "name": "David Cramer",
                  },
                  "created_at": "2018-01-06T16:07:16.814650+00:00",
                  "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                  "revision": Object {
                    "author": Object {
                      "email": "dcramer@gmail.com",
                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                      "name": "David Cramer",
                    },
                    "committed_at": "2018-01-06T16:06:52+00:00",
                    "created_at": "2018-01-06T16:06:52+00:00",
                    "message": "fix: Remove break-word behavior on coverage
",
                    "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                  },
                },
                "started_at": "2018-01-06T16:07:16.957093+00:00",
                "stats": Object {
                  "coverage": Object {
                    "diff_lines_covered": 0,
                    "diff_lines_uncovered": 0,
                    "lines_covered": 6127,
                    "lines_uncovered": 3060,
                  },
                  "style_violations": Object {
                    "count": 0,
                  },
                  "tests": Object {
                    "count": 153,
                    "count_unique": 153,
                    "duration": 14673,
                    "failures": 0,
                    "failures_unique": 0,
                  },
                  "webpack": Object {
                    "total_asset_size": 0,
                  },
                },
                "status": "finished",
                "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
              },
            ]
          }
          links={Object {}}
          loading={false}
          location={
            Object {
              "pathame": "/mock-pathname/",
              "query": Object {},
            }
          }
          params={Object {}}
          subscribe={[Function]}
          unsubscribe={[Function]}
        >
          <SideEffect(DocumentTitle)
            title="My Builds"
          >
            <DocumentTitle
              title="My Builds"
            >
              <Layout
                title="My Builds"
              >
                <div>
                  <Connect(Styled(UnstyledHeader))>
                    <Styled(UnstyledHeader)
                      isAuthenticated={true}
                      logout={[Function]}
                      user={
                        Object {
                          "created_at": "2018-01-06T16:07:16.814650+00:00",
                          "email": "dcramer@gmail.com",
                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                        }
                      }
                    >
                      <UnstyledHeader
                        className="sc-cSHVUG dTFQqZ"
                        isAuthenticated={true}
                        logout={[Function]}
                        user={
                          Object {
                            "created_at": "2018-01-06T16:07:16.814650+00:00",
                            "email": "dcramer@gmail.com",
                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                          }
                        }
                      >
                        <div
                          className="sc-cSHVUG dTFQqZ"
                        >
                          <div
                            style={
                              Object {
                                "float": "left",
                                "marginRight": 10,
                              }
                            }
                          >
                            <Styled(Link)
                              to="/"
                            >
                              <Link
                                className="sc-jzJRlG eRNUwX"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/"
                              >
                                <a
                                  className="sc-jzJRlG eRNUwX"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <LogoIcon
                                    color="#111111"
                                    size="26"
                                  >
                                    <IconBase
                                      color="#111111"
                                      size="26"
                                      viewBox="0 0 31 20"
                                    >
                                      <svg
                                        fill="currentColor"
                                        height="26"
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "color": "#111111",
                                            "verticalAlign": "middle",
                                          }
                                        }
                                        viewBox="0 0 31 20"
                                        width="26"
                                      >
                                        <g
                                          fill="#111111"
                                        >
                                          <path
                                            d="M4.89681425,0.000171191628 L3.11788867,1.94050602 L3.39546367,1.94270705 L22.1969511,1.94270705 L15.3534435,9.40861852 L12.5312272,6.32961481 L0,19.9997554 L0,20 L10.9645792,20 L13.4446568,20 L30.5435212,20 L20.7484253,9.31421857 L18.0093593,12.3059145 L16.6713744,10.8461391 L26.6134505,0.000171191628 L4.89681425,0.000171191628 Z M12.5312272,9.56122363 L13.8723913,11.0241784 L7.49819332,17.8165731 L4.9640681,17.8165731 L12.5312272,9.56122363 Z M15.1900777,12.4616989 L16.5290408,13.9226972 L12.9638529,17.8165731 L10.1631578,17.8165731 L15.1900777,12.4616989 Z M20.7494036,12.5470502 L25.5796977,17.8165731 L15.9247344,17.8165731 L20.7494036,12.5470502 Z"
                                          />
                                        </g>
                                      </svg>
                                    </IconBase>
                                  </LogoIcon>
                                </a>
                              </Link>
                            </Styled(Link)>
                          </div>
                          <div
                            style={
                              Object {
                                "float": "right",
                              }
                            }
                          >
                            <Styled(Link)
                              to="/settings"
                            >
                              <Link
                                className="sc-jzJRlG eRNUwX"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                to="/settings"
                              >
                                <a
                                  className="sc-jzJRlG eRNUwX"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <MdSettings
                                    size={24}
                                  >
                                    <IconBase
                                      size={24}
                                      viewBox="0 0 40 40"
                                    >
                                      <svg
                                        fill="currentColor"
                                        height={24}
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "color": undefined,
                                            "verticalAlign": "middle",
                                          }
                                        }
                                        viewBox="0 0 40 40"
                                        width={24}
                                      >
                                        <g>
                                          <path
                                            d="m20 25.9c3.2 0 5.9-2.7 5.9-5.9s-2.7-5.9-5.9-5.9-5.9 2.7-5.9 5.9 2.7 5.9 5.9 5.9z m12.4-4.3l3.5 2.8c0.4 0.2 0.4 0.7 0.2 1.1l-3.4 5.8c-0.2 0.3-0.6 0.4-1 0.3l-4.1-1.7c-0.9 0.7-1.8 1.3-2.8 1.7l-0.7 4.3c0 0.4-0.4 0.7-0.7 0.7h-6.8c-0.4 0-0.7-0.3-0.7-0.7l-0.7-4.3c-1-0.4-1.9-1-2.8-1.7l-4.1 1.7c-0.4 0.1-0.8 0-1-0.3l-3.4-5.8c-0.2-0.4-0.2-0.9 0.2-1.1l3.5-2.8c-0.1-0.5-0.1-1.1-0.1-1.6s0-1.1 0.1-1.6l-3.5-2.8c-0.4-0.2-0.4-0.7-0.2-1.1l3.4-5.7c0.2-0.4 0.6-0.5 1-0.4l4.1 1.7c0.9-0.6 1.8-1.3 2.8-1.7l0.7-4.3c0-0.4 0.3-0.7 0.7-0.7h6.8c0.3 0 0.7 0.3 0.7 0.7l0.7 4.3c1 0.4 1.9 1 2.8 1.7l4.1-1.7c0.4-0.1 0.8 0 1 0.4l3.4 5.7c0.2 0.4 0.2 0.9-0.2 1.1l-3.5 2.8c0.1 0.5 0.1 1.1 0.1 1.6s0 1.1-0.1 1.6z"
                                          />
                                        </g>
                                      </svg>
                                    </IconBase>
                                  </MdSettings>
                                </a>
                              </Link>
                            </Styled(Link)>
                            <Styled(Link)
                              onClick={[Function]}
                            >
                              <Link
                                className="sc-jzJRlG eRNUwX"
                                onClick={[Function]}
                                onlyActiveOnIndex={false}
                                style={Object {}}
                              >
                                <a
                                  className="sc-jzJRlG eRNUwX"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <MdExitToApp
                                    size={24}
                                  >
                                    <IconBase
                                      size={24}
                                      viewBox="0 0 40 40"
                                    >
                                      <svg
                                        fill="currentColor"
                                        height={24}
                                        preserveAspectRatio="xMidYMid meet"
                                        style={
                                          Object {
                                            "color": undefined,
                                            "verticalAlign": "middle",
                                          }
                                        }
                                        viewBox="0 0 40 40"
                                        width={24}
                                      >
                                        <g>
                                          <path
                                            d="m31.6 5q1.4 0 2.4 1t1 2.4v23.2q0 1.4-1 2.4t-2.4 1h-23.2q-1.4 0-2.4-1t-1-2.4v-6.6h3.4v6.6h23.2v-23.2h-23.2v6.6h-3.4v-6.6q0-1.4 1-2.4t2.4-1h23.2z m-14.8 21l4.3-4.4h-16.1v-3.2h16.1l-4.3-4.4 2.3-2.4 8.4 8.4-8.4 8.4z"
                                          />
                                        </g>
                                      </svg>
                                    </IconBase>
                                  </MdExitToApp>
                                </a>
                              </Link>
                            </Styled(Link)>
                          </div>
                          <Select
                            addLabelText="Add \\"{label}\\"?"
                            arrowRenderer={[Function]}
                            autosize={true}
                            backspaceRemoves={true}
                            backspaceToRemoveMessage="Press backspace to remove {label}"
                            className="Repo-Selector"
                            clearAllText="Clear all"
                            clearRenderer={[Function]}
                            clearValueText="Clear value"
                            clearable={false}
                            closeOnSelect={true}
                            deleteRemoves={true}
                            delimiter=","
                            disabled={false}
                            escapeClearsValue={true}
                            filterOptions={[Function]}
                            ignoreAccents={true}
                            ignoreCase={true}
                            inputProps={Object {}}
                            isLoading={false}
                            joinValues={false}
                            labelKey="label"
                            matchPos="any"
                            matchProp="any"
                            menuBuffer={0}
                            menuRenderer={[Function]}
                            multi={false}
                            noResultsText="No results found"
                            onBlurResetsInput={true}
                            onChange={[Function]}
                            onCloseResetsInput={true}
                            onSelectResetsInput={true}
                            openOnClick={true}
                            optionComponent={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "getsentry / zeus",
                                  "value": "gh/getsentry/zeus",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select Repository"
                            required={false}
                            scrollMenuIntoView={true}
                            searchable={true}
                            simpleValue={false}
                            tabSelectsValue={true}
                            value={null}
                            valueComponent={[Function]}
                            valueKey="value"
                          >
                            <div
                              className="Select Repo-Selector Select--single is-searchable"
                            >
                              <div
                                className="Select-control"
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                              >
                                <span
                                  className="Select-multi-value-wrapper"
                                  id="react-select-3--value"
                                >
                                  <div
                                    className="Select-placeholder"
                                  >
                                    Select Repository
                                  </div>
                                  <AutosizeInput
                                    aria-activedescendant="react-select-3--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    className="Select-input"
                                    minWidth="5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    value=""
                                  >
                                    <div
                                      className="Select-input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                        }
                                      }
                                    >
                                      <style
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "input#undefined::-ms-clear {display: none;}",
                                          }
                                        }
                                      />
                                      <input
                                        aria-activedescendant="react-select-3--value"
                                        aria-expanded="false"
                                        aria-haspopup="false"
                                        aria-owns=""
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        role="combobox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "5px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </span>
                                <span
                                  className="Select-arrow-zone"
                                  onMouseDown={[Function]}
                                >
                                  <span
                                    className="Select-arrow"
                                    onMouseDown={[Function]}
                                  />
                                </span>
                              </div>
                            </div>
                          </Select>
                          <div
                            style={
                              Object {
                                "clear": "both",
                              }
                            }
                          />
                        </div>
                      </UnstyledHeader>
                    </Styled(UnstyledHeader)>
                  </Connect(Styled(UnstyledHeader))>
                  <styled.div>
                    <div
                      className="sc-fjdhpX cyaOdX"
                    >
                      <styled.div>
                        <div
                          className="sc-kpOJdX fNSmRS"
                        >
                          <BuildListBody
                            buildList={
                              Array [
                                Object {
                                  "created_at": "2018-01-06T16:07:16.830829+00:00",
                                  "external_id": "325812408",
                                  "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                  "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                  "label": "fix: Remove break-word behavior on coverage",
                                  "number": 650,
                                  "provider": "travis-ci",
                                  "repository": Object {
                                    "backend": "git",
                                    "created_at": "2017-08-15T17:01:33.206772+00:00",
                                    "full_name": "gh/getsentry/zeus",
                                    "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                    "latest_build": null,
                                    "name": "zeus",
                                    "owner_name": "getsentry",
                                    "permissions": Object {
                                      "admin": true,
                                      "read": true,
                                      "write": true,
                                    },
                                    "provider": "gh",
                                    "url": "git@github.com:getsentry/zeus.git",
                                  },
                                  "result": "passed",
                                  "source": Object {
                                    "author": Object {
                                      "email": "dcramer@gmail.com",
                                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                      "name": "David Cramer",
                                    },
                                    "created_at": "2018-01-06T16:07:16.814650+00:00",
                                    "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                    "revision": Object {
                                      "author": Object {
                                        "email": "dcramer@gmail.com",
                                        "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                        "name": "David Cramer",
                                      },
                                      "committed_at": "2018-01-06T16:06:52+00:00",
                                      "created_at": "2018-01-06T16:06:52+00:00",
                                      "message": "fix: Remove break-word behavior on coverage
",
                                      "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                    },
                                  },
                                  "started_at": "2018-01-06T16:07:16.957093+00:00",
                                  "stats": Object {
                                    "coverage": Object {
                                      "diff_lines_covered": 0,
                                      "diff_lines_uncovered": 0,
                                      "lines_covered": 6127,
                                      "lines_uncovered": 3060,
                                    },
                                    "style_violations": Object {
                                      "count": 0,
                                    },
                                    "tests": Object {
                                      "count": 153,
                                      "count_unique": 153,
                                      "duration": 14673,
                                      "failures": 0,
                                      "failures_unique": 0,
                                    },
                                    "webpack": Object {
                                      "total_asset_size": 0,
                                    },
                                  },
                                  "status": "finished",
                                  "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                },
                              ]
                            }
                            error={false}
                            links={Object {}}
                            loading={false}
                            location={
                              Object {
                                "pathame": "/mock-pathname/",
                                "query": Object {},
                              }
                            }
                            params={Object {}}
                            subscribe={[Function]}
                            unsubscribe={[Function]}
                          >
                            <div>
                              <h2>
                                Your Builds
                              </h2>
                              <BuildList
                                buildList={
                                  Array [
                                    Object {
                                      "created_at": "2018-01-06T16:07:16.830829+00:00",
                                      "external_id": "325812408",
                                      "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                      "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                      "label": "fix: Remove break-word behavior on coverage",
                                      "number": 650,
                                      "provider": "travis-ci",
                                      "repository": Object {
                                        "backend": "git",
                                        "created_at": "2017-08-15T17:01:33.206772+00:00",
                                        "full_name": "gh/getsentry/zeus",
                                        "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                        "latest_build": null,
                                        "name": "zeus",
                                        "owner_name": "getsentry",
                                        "permissions": Object {
                                          "admin": true,
                                          "read": true,
                                          "write": true,
                                        },
                                        "provider": "gh",
                                        "url": "git@github.com:getsentry/zeus.git",
                                      },
                                      "result": "passed",
                                      "source": Object {
                                        "author": Object {
                                          "email": "dcramer@gmail.com",
                                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                          "name": "David Cramer",
                                        },
                                        "created_at": "2018-01-06T16:07:16.814650+00:00",
                                        "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                        "revision": Object {
                                          "author": Object {
                                            "email": "dcramer@gmail.com",
                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                            "name": "David Cramer",
                                          },
                                          "committed_at": "2018-01-06T16:06:52+00:00",
                                          "created_at": "2018-01-06T16:06:52+00:00",
                                          "message": "fix: Remove break-word behavior on coverage
",
                                          "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                        },
                                      },
                                      "started_at": "2018-01-06T16:07:16.957093+00:00",
                                      "stats": Object {
                                        "coverage": Object {
                                          "diff_lines_covered": 0,
                                          "diff_lines_uncovered": 0,
                                          "lines_covered": 6127,
                                          "lines_uncovered": 3060,
                                        },
                                        "style_violations": Object {
                                          "count": 0,
                                        },
                                        "tests": Object {
                                          "count": 153,
                                          "count_unique": 153,
                                          "duration": 14673,
                                          "failures": 0,
                                          "failures_unique": 0,
                                        },
                                        "webpack": Object {
                                          "total_asset_size": 0,
                                        },
                                      },
                                      "status": "finished",
                                      "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                    },
                                  ]
                                }
                                columns={
                                  Array [
                                    "coverage",
                                    "duration",
                                    "date",
                                  ]
                                }
                                includeAuthor={false}
                                includeRepo={true}
                                params={Object {}}
                              >
                                <styled.div>
                                  <div
                                    className="sc-bZQynM fHbQJ"
                                  >
                                    <Styled(Component)>
                                      <Component
                                        className="sc-htoDjs CJFOY"
                                      >
                                        <Styled(styled.div)
                                          align="center"
                                          className="sc-htoDjs CJFOY ResultGrid-Header"
                                        >
                                          <styled.div
                                            align="center"
                                            className="sc-htoDjs CJFOY ResultGrid-Header sc-htpNat iSNGhk"
                                          >
                                            <div
                                              className="sc-htoDjs CJFOY ResultGrid-Header sc-htpNat iSNGhk sc-bdVaJa iHZvIS"
                                            >
                                              <Styled(Component)>
                                                <Component
                                                  className="sc-gzVnrw jBvblj"
                                                >
                                                  <styled.div
                                                    className="sc-gzVnrw jBvblj ResultGrid-Column"
                                                    flex={1}
                                                  >
                                                    <div
                                                      className="sc-gzVnrw jBvblj ResultGrid-Column sc-bdVaJa kYmYWE"
                                                    >
                                                      Build
                                                    </div>
                                                  </styled.div>
                                                </Component>
                                              </Styled(Component)>
                                              <Styled(Component)
                                                hide="sm"
                                                textAlign="center"
                                                width={90}
                                              >
                                                <Component
                                                  className="sc-gzVnrw hVTCSJ"
                                                  hide="sm"
                                                  textAlign="center"
                                                  width={90}
                                                >
                                                  <styled.div
                                                    className="sc-gzVnrw hVTCSJ ResultGrid-Column"
                                                    hide="sm"
                                                    style={
                                                      Object {
                                                        "textAlign": "center",
                                                      }
                                                    }
                                                    textAlign="center"
                                                    width={90}
                                                  >
                                                    <div
                                                      className="sc-gzVnrw hVTCSJ ResultGrid-Column sc-bdVaJa jfzzVE"
                                                      style={
                                                        Object {
                                                          "textAlign": "center",
                                                        }
                                                      }
                                                      width={90}
                                                    >
                                                      Coverage
                                                    </div>
                                                  </styled.div>
                                                </Component>
                                              </Styled(Component)>
                                              <Styled(Component)
                                                hide="sm"
                                                textAlign="center"
                                                width={90}
                                              >
                                                <Component
                                                  className="sc-gzVnrw hVTCSJ"
                                                  hide="sm"
                                                  textAlign="center"
                                                  width={90}
                                                >
                                                  <styled.div
                                                    className="sc-gzVnrw hVTCSJ ResultGrid-Column"
                                                    hide="sm"
                                                    style={
                                                      Object {
                                                        "textAlign": "center",
                                                      }
                                                    }
                                                    textAlign="center"
                                                    width={90}
                                                  >
                                                    <div
                                                      className="sc-gzVnrw hVTCSJ ResultGrid-Column sc-bdVaJa jfzzVE"
                                                      style={
                                                        Object {
                                                          "textAlign": "center",
                                                        }
                                                      }
                                                      width={90}
                                                    >
                                                      Duration
                                                    </div>
                                                  </styled.div>
                                                </Component>
                                              </Styled(Component)>
                                              <Styled(Component)
                                                hide="sm"
                                                textAlign="right"
                                                width={120}
                                              >
                                                <Component
                                                  className="sc-gzVnrw hVTCSJ"
                                                  hide="sm"
                                                  textAlign="right"
                                                  width={120}
                                                >
                                                  <styled.div
                                                    className="sc-gzVnrw hVTCSJ ResultGrid-Column"
                                                    hide="sm"
                                                    style={
                                                      Object {
                                                        "textAlign": "right",
                                                      }
                                                    }
                                                    textAlign="right"
                                                    width={120}
                                                  >
                                                    <div
                                                      className="sc-gzVnrw hVTCSJ ResultGrid-Column sc-bdVaJa dYmHol"
                                                      style={
                                                        Object {
                                                          "textAlign": "right",
                                                        }
                                                      }
                                                      width={120}
                                                    >
                                                      When
                                                    </div>
                                                  </styled.div>
                                                </Component>
                                              </Styled(Component)>
                                            </div>
                                          </styled.div>
                                        </Styled(styled.div)>
                                      </Component>
                                    </Styled(Component)>
                                    <div>
                                      <BuildListItem
                                        build={
                                          Object {
                                            "created_at": "2018-01-06T16:07:16.830829+00:00",
                                            "external_id": "325812408",
                                            "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                            "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                            "label": "fix: Remove break-word behavior on coverage",
                                            "number": 650,
                                            "provider": "travis-ci",
                                            "repository": Object {
                                              "backend": "git",
                                              "created_at": "2017-08-15T17:01:33.206772+00:00",
                                              "full_name": "gh/getsentry/zeus",
                                              "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                              "latest_build": null,
                                              "name": "zeus",
                                              "owner_name": "getsentry",
                                              "permissions": Object {
                                                "admin": true,
                                                "read": true,
                                                "write": true,
                                              },
                                              "provider": "gh",
                                              "url": "git@github.com:getsentry/zeus.git",
                                            },
                                            "result": "passed",
                                            "source": Object {
                                              "author": Object {
                                                "email": "dcramer@gmail.com",
                                                "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                "name": "David Cramer",
                                              },
                                              "created_at": "2018-01-06T16:07:16.814650+00:00",
                                              "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                              "revision": Object {
                                                "author": Object {
                                                  "email": "dcramer@gmail.com",
                                                  "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                  "name": "David Cramer",
                                                },
                                                "committed_at": "2018-01-06T16:06:52+00:00",
                                                "created_at": "2018-01-06T16:06:52+00:00",
                                                "message": "fix: Remove break-word behavior on coverage
",
                                                "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                              },
                                            },
                                            "started_at": "2018-01-06T16:07:16.957093+00:00",
                                            "stats": Object {
                                              "coverage": Object {
                                                "diff_lines_covered": 0,
                                                "diff_lines_uncovered": 0,
                                                "lines_covered": 6127,
                                                "lines_uncovered": 3060,
                                              },
                                              "style_violations": Object {
                                                "count": 0,
                                              },
                                              "tests": Object {
                                                "count": 153,
                                                "count_unique": 153,
                                                "duration": 14673,
                                                "failures": 0,
                                                "failures_unique": 0,
                                              },
                                              "webpack": Object {
                                                "total_asset_size": 0,
                                              },
                                            },
                                            "status": "finished",
                                            "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                          }
                                        }
                                        columns={
                                          Array [
                                            "coverage",
                                            "duration",
                                            "date",
                                          ]
                                        }
                                        includeAuthor={false}
                                        includeRepo={true}
                                        key="aa7097a2-f2fb-11e7-a565-0a580a28057d"
                                        params={Object {}}
                                      >
                                        <Styled(Link)
                                          activeClassName="active"
                                          to="/gh/getsentry/zeus/builds/650"
                                        >
                                          <Link
                                            activeClassName="active"
                                            className="sc-bxivhb kZeKpR"
                                            onlyActiveOnIndex={false}
                                            style={Object {}}
                                            to="/gh/getsentry/zeus/builds/650"
                                          >
                                            <a
                                              className="sc-bxivhb kZeKpR"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <Styled(Component)>
                                                <Component
                                                  className="sc-dnqmqq bLWiHU"
                                                >
                                                  <Styled(styled.div)
                                                    align="center"
                                                    className="sc-dnqmqq bLWiHU ResultGrid-Row"
                                                  >
                                                    <styled.div
                                                      align="center"
                                                      className="sc-dnqmqq bLWiHU ResultGrid-Row sc-htpNat iSNGhk"
                                                    >
                                                      <div
                                                        className="sc-dnqmqq bLWiHU ResultGrid-Row sc-htpNat iSNGhk sc-bdVaJa iHZvIS"
                                                      >
                                                        <Styled(Component)>
                                                          <Component
                                                            className="sc-gzVnrw jBvblj"
                                                          >
                                                            <styled.div
                                                              className="sc-gzVnrw jBvblj ResultGrid-Column"
                                                              flex={1}
                                                            >
                                                              <div
                                                                className="sc-gzVnrw jBvblj ResultGrid-Column sc-bdVaJa kYmYWE"
                                                              >
                                                                <Styled(styled.div)>
                                                                  <styled.div
                                                                    className="sc-htpNat eLQHN"
                                                                  >
                                                                    <div
                                                                      className="sc-htpNat eLQHN sc-bdVaJa iHZvIS"
                                                                    >
                                                                      <styled.div
                                                                        mr={8}
                                                                        width={15}
                                                                      >
                                                                        <div
                                                                          className="sc-bdVaJa hGSMoE"
                                                                          width={15}
                                                                        >
                                                                          <ObjectResult
                                                                            data={
                                                                              Object {
                                                                                "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                                                "external_id": "325812408",
                                                                                "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                                                "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                                                "label": "fix: Remove break-word behavior on coverage",
                                                                                "number": 650,
                                                                                "provider": "travis-ci",
                                                                                "repository": Object {
                                                                                  "backend": "git",
                                                                                  "created_at": "2017-08-15T17:01:33.206772+00:00",
                                                                                  "full_name": "gh/getsentry/zeus",
                                                                                  "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                                                                  "latest_build": null,
                                                                                  "name": "zeus",
                                                                                  "owner_name": "getsentry",
                                                                                  "permissions": Object {
                                                                                    "admin": true,
                                                                                    "read": true,
                                                                                    "write": true,
                                                                                  },
                                                                                  "provider": "gh",
                                                                                  "url": "git@github.com:getsentry/zeus.git",
                                                                                },
                                                                                "result": "passed",
                                                                                "source": Object {
                                                                                  "author": Object {
                                                                                    "email": "dcramer@gmail.com",
                                                                                    "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                                    "name": "David Cramer",
                                                                                  },
                                                                                  "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                                                  "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                                                  "revision": Object {
                                                                                    "author": Object {
                                                                                      "email": "dcramer@gmail.com",
                                                                                      "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                                      "name": "David Cramer",
                                                                                    },
                                                                                    "committed_at": "2018-01-06T16:06:52+00:00",
                                                                                    "created_at": "2018-01-06T16:06:52+00:00",
                                                                                    "message": "fix: Remove break-word behavior on coverage
",
                                                                                    "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                                                  },
                                                                                },
                                                                                "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                                                "stats": Object {
                                                                                  "coverage": Object {
                                                                                    "diff_lines_covered": 0,
                                                                                    "diff_lines_uncovered": 0,
                                                                                    "lines_covered": 6127,
                                                                                    "lines_uncovered": 3060,
                                                                                  },
                                                                                  "style_violations": Object {
                                                                                    "count": 0,
                                                                                  },
                                                                                  "tests": Object {
                                                                                    "count": 153,
                                                                                    "count_unique": 153,
                                                                                    "duration": 14673,
                                                                                    "failures": 0,
                                                                                    "failures_unique": 0,
                                                                                  },
                                                                                  "webpack": Object {
                                                                                    "total_asset_size": 0,
                                                                                  },
                                                                                },
                                                                                "status": "finished",
                                                                                "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                                              }
                                                                            }
                                                                            size={16}
                                                                          >
                                                                            <styled.div
                                                                              result="passed"
                                                                              status="finished"
                                                                            >
                                                                              <div
                                                                                className="sc-EHOje hJNzZA"
                                                                                result="passed"
                                                                              >
                                                                                <MdCheckCircle
                                                                                  size={16}
                                                                                >
                                                                                  <IconBase
                                                                                    size={16}
                                                                                    viewBox="0 0 40 40"
                                                                                  >
                                                                                    <svg
                                                                                      fill="currentColor"
                                                                                      height={16}
                                                                                      preserveAspectRatio="xMidYMid meet"
                                                                                      style={
                                                                                        Object {
                                                                                          "color": undefined,
                                                                                          "verticalAlign": "middle",
                                                                                        }
                                                                                      }
                                                                                      viewBox="0 0 40 40"
                                                                                      width={16}
                                                                                    >
                                                                                      <g>
                                                                                        <path
                                                                                          d="m16.6 28.4l15-15-2.3-2.5-12.7 12.7-5.9-5.9-2.3 2.3z m3.4-25c9.2 0 16.6 7.4 16.6 16.6s-7.4 16.6-16.6 16.6-16.6-7.4-16.6-16.6 7.4-16.6 16.6-16.6z"
                                                                                        />
                                                                                      </g>
                                                                                    </svg>
                                                                                  </IconBase>
                                                                                </MdCheckCircle>
                                                                              </div>
                                                                            </styled.div>
                                                                          </ObjectResult>
                                                                        </div>
                                                                      </styled.div>
                                                                      <styled.div
                                                                        flex="1"
                                                                        style={
                                                                          Object {
                                                                            "minWidth": 0,
                                                                          }
                                                                        }
                                                                      >
                                                                        <div
                                                                          className="sc-bdVaJa kYmYWE"
                                                                          style={
                                                                            Object {
                                                                              "minWidth": 0,
                                                                            }
                                                                          }
                                                                        >
                                                                          <styled.div>
                                                                            <div
                                                                              className="sc-iwsKbI hSUBot"
                                                                            >
                                                                              fix: Remove break-word behavior on coverage
                                                                            </div>
                                                                          </styled.div>
                                                                          <styled.div>
                                                                            <div
                                                                              className="sc-jTzLTM ihWNxQ"
                                                                            >
                                                                              <Styled(styled.div)
                                                                                to="/gh/getsentry/zeus"
                                                                              >
                                                                                <styled.div
                                                                                  className="sc-VigVT jJXsIW"
                                                                                  to="/gh/getsentry/zeus"
                                                                                >
                                                                                  <div
                                                                                    className="sc-VigVT jJXsIW sc-gZMcBi bDPlgE"
                                                                                    to="/gh/getsentry/zeus"
                                                                                  >
                                                                                    getsentry
                                                                                    /
                                                                                    zeus
                                                                                  </div>
                                                                                </styled.div>
                                                                              </Styled(styled.div)>
                                                                              <Styled(styled.div)>
                                                                                <styled.div
                                                                                  className="sc-gqjmRU fKhbCo"
                                                                                >
                                                                                  <div
                                                                                    className="sc-gqjmRU fKhbCo sc-gZMcBi bDPlgE"
                                                                                  >
                                                                                    eff634a
                                                                                  </div>
                                                                                </styled.div>
                                                                              </Styled(styled.div)>
                                                                            </div>
                                                                          </styled.div>
                                                                        </div>
                                                                      </styled.div>
                                                                    </div>
                                                                  </styled.div>
                                                                </Styled(styled.div)>
                                                              </div>
                                                            </styled.div>
                                                          </Component>
                                                        </Styled(Component)>
                                                        <Styled(Component)
                                                          hide="sm"
                                                          textAlign="center"
                                                          width={90}
                                                        >
                                                          <Component
                                                            className="sc-gzVnrw hVTCSJ"
                                                            hide="sm"
                                                            textAlign="center"
                                                            width={90}
                                                          >
                                                            <styled.div
                                                              className="sc-gzVnrw hVTCSJ ResultGrid-Column"
                                                              hide="sm"
                                                              style={
                                                                Object {
                                                                  "textAlign": "center",
                                                                }
                                                              }
                                                              textAlign="center"
                                                              width={90}
                                                            >
                                                              <div
                                                                className="sc-gzVnrw hVTCSJ ResultGrid-Column sc-bdVaJa jfzzVE"
                                                                style={
                                                                  Object {
                                                                    "textAlign": "center",
                                                                  }
                                                                }
                                                                width={90}
                                                              >
                                                                <ObjectCoverage
                                                                  data={
                                                                    Object {
                                                                      "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                                      "external_id": "325812408",
                                                                      "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                                      "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                                      "label": "fix: Remove break-word behavior on coverage",
                                                                      "number": 650,
                                                                      "provider": "travis-ci",
                                                                      "repository": Object {
                                                                        "backend": "git",
                                                                        "created_at": "2017-08-15T17:01:33.206772+00:00",
                                                                        "full_name": "gh/getsentry/zeus",
                                                                        "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                                                        "latest_build": null,
                                                                        "name": "zeus",
                                                                        "owner_name": "getsentry",
                                                                        "permissions": Object {
                                                                          "admin": true,
                                                                          "read": true,
                                                                          "write": true,
                                                                        },
                                                                        "provider": "gh",
                                                                        "url": "git@github.com:getsentry/zeus.git",
                                                                      },
                                                                      "result": "passed",
                                                                      "source": Object {
                                                                        "author": Object {
                                                                          "email": "dcramer@gmail.com",
                                                                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                          "name": "David Cramer",
                                                                        },
                                                                        "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                                        "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                                        "revision": Object {
                                                                          "author": Object {
                                                                            "email": "dcramer@gmail.com",
                                                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                            "name": "David Cramer",
                                                                          },
                                                                          "committed_at": "2018-01-06T16:06:52+00:00",
                                                                          "created_at": "2018-01-06T16:06:52+00:00",
                                                                          "message": "fix: Remove break-word behavior on coverage
",
                                                                          "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                                        },
                                                                      },
                                                                      "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                                      "stats": Object {
                                                                        "coverage": Object {
                                                                          "diff_lines_covered": 0,
                                                                          "diff_lines_uncovered": 0,
                                                                          "lines_covered": 6127,
                                                                          "lines_uncovered": 3060,
                                                                        },
                                                                        "style_violations": Object {
                                                                          "count": 0,
                                                                        },
                                                                        "tests": Object {
                                                                          "count": 153,
                                                                          "count_unique": 153,
                                                                          "duration": 14673,
                                                                          "failures": 0,
                                                                          "failures_unique": 0,
                                                                        },
                                                                        "webpack": Object {
                                                                          "total_asset_size": 0,
                                                                        },
                                                                      },
                                                                      "status": "finished",
                                                                      "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                                    }
                                                                  }
                                                                  diff={true}
                                                                >
                                                                  <span />
                                                                </ObjectCoverage>
                                                              </div>
                                                            </styled.div>
                                                          </Component>
                                                        </Styled(Component)>
                                                        <Styled(Component)
                                                          hide="sm"
                                                          textAlign="center"
                                                          width={90}
                                                        >
                                                          <Component
                                                            className="sc-gzVnrw hVTCSJ"
                                                            hide="sm"
                                                            textAlign="center"
                                                            width={90}
                                                          >
                                                            <styled.div
                                                              className="sc-gzVnrw hVTCSJ ResultGrid-Column"
                                                              hide="sm"
                                                              style={
                                                                Object {
                                                                  "textAlign": "center",
                                                                }
                                                              }
                                                              textAlign="center"
                                                              width={90}
                                                            >
                                                              <div
                                                                className="sc-gzVnrw hVTCSJ ResultGrid-Column sc-bdVaJa jfzzVE"
                                                                style={
                                                                  Object {
                                                                    "textAlign": "center",
                                                                  }
                                                                }
                                                                width={90}
                                                              >
                                                                <ObjectDuration
                                                                  data={
                                                                    Object {
                                                                      "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                                      "external_id": "325812408",
                                                                      "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                                      "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                                      "label": "fix: Remove break-word behavior on coverage",
                                                                      "number": 650,
                                                                      "provider": "travis-ci",
                                                                      "repository": Object {
                                                                        "backend": "git",
                                                                        "created_at": "2017-08-15T17:01:33.206772+00:00",
                                                                        "full_name": "gh/getsentry/zeus",
                                                                        "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                                                        "latest_build": null,
                                                                        "name": "zeus",
                                                                        "owner_name": "getsentry",
                                                                        "permissions": Object {
                                                                          "admin": true,
                                                                          "read": true,
                                                                          "write": true,
                                                                        },
                                                                        "provider": "gh",
                                                                        "url": "git@github.com:getsentry/zeus.git",
                                                                      },
                                                                      "result": "passed",
                                                                      "source": Object {
                                                                        "author": Object {
                                                                          "email": "dcramer@gmail.com",
                                                                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                          "name": "David Cramer",
                                                                        },
                                                                        "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                                        "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                                        "revision": Object {
                                                                          "author": Object {
                                                                            "email": "dcramer@gmail.com",
                                                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                            "name": "David Cramer",
                                                                          },
                                                                          "committed_at": "2018-01-06T16:06:52+00:00",
                                                                          "created_at": "2018-01-06T16:06:52+00:00",
                                                                          "message": "fix: Remove break-word behavior on coverage
",
                                                                          "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                                        },
                                                                      },
                                                                      "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                                      "stats": Object {
                                                                        "coverage": Object {
                                                                          "diff_lines_covered": 0,
                                                                          "diff_lines_uncovered": 0,
                                                                          "lines_covered": 6127,
                                                                          "lines_uncovered": 3060,
                                                                        },
                                                                        "style_violations": Object {
                                                                          "count": 0,
                                                                        },
                                                                        "tests": Object {
                                                                          "count": 153,
                                                                          "count_unique": 153,
                                                                          "duration": 14673,
                                                                          "failures": 0,
                                                                          "failures_unique": 0,
                                                                        },
                                                                        "webpack": Object {
                                                                          "total_asset_size": 0,
                                                                        },
                                                                      },
                                                                      "status": "finished",
                                                                      "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                                    }
                                                                  }
                                                                  short={true}
                                                                >
                                                                  <AggregateDuration
                                                                    data={
                                                                      Array [
                                                                        Object {
                                                                          "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                                          "external_id": "325812408",
                                                                          "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                                          "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                                          "label": "fix: Remove break-word behavior on coverage",
                                                                          "number": 650,
                                                                          "provider": "travis-ci",
                                                                          "repository": Object {
                                                                            "backend": "git",
                                                                            "created_at": "2017-08-15T17:01:33.206772+00:00",
                                                                            "full_name": "gh/getsentry/zeus",
                                                                            "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                                                            "latest_build": null,
                                                                            "name": "zeus",
                                                                            "owner_name": "getsentry",
                                                                            "permissions": Object {
                                                                              "admin": true,
                                                                              "read": true,
                                                                              "write": true,
                                                                            },
                                                                            "provider": "gh",
                                                                            "url": "git@github.com:getsentry/zeus.git",
                                                                          },
                                                                          "result": "passed",
                                                                          "source": Object {
                                                                            "author": Object {
                                                                              "email": "dcramer@gmail.com",
                                                                              "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                              "name": "David Cramer",
                                                                            },
                                                                            "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                                            "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                                            "revision": Object {
                                                                              "author": Object {
                                                                                "email": "dcramer@gmail.com",
                                                                                "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                                "name": "David Cramer",
                                                                              },
                                                                              "committed_at": "2018-01-06T16:06:52+00:00",
                                                                              "created_at": "2018-01-06T16:06:52+00:00",
                                                                              "message": "fix: Remove break-word behavior on coverage
",
                                                                              "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                                            },
                                                                          },
                                                                          "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                                          "stats": Object {
                                                                            "coverage": Object {
                                                                              "diff_lines_covered": 0,
                                                                              "diff_lines_uncovered": 0,
                                                                              "lines_covered": 6127,
                                                                              "lines_uncovered": 3060,
                                                                            },
                                                                            "style_violations": Object {
                                                                              "count": 0,
                                                                            },
                                                                            "tests": Object {
                                                                              "count": 153,
                                                                              "count_unique": 153,
                                                                              "duration": 14673,
                                                                              "failures": 0,
                                                                              "failures_unique": 0,
                                                                            },
                                                                            "webpack": Object {
                                                                              "total_asset_size": 0,
                                                                            },
                                                                          },
                                                                          "status": "finished",
                                                                          "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <Duration
                                                                      data={
                                                                        Array [
                                                                          Object {
                                                                            "created_at": "2018-01-06T16:07:16.830829+00:00",
                                                                            "external_id": "325812408",
                                                                            "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                                                            "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                                                            "label": "fix: Remove break-word behavior on coverage",
                                                                            "number": 650,
                                                                            "provider": "travis-ci",
                                                                            "repository": Object {
                                                                              "backend": "git",
                                                                              "created_at": "2017-08-15T17:01:33.206772+00:00",
                                                                              "full_name": "gh/getsentry/zeus",
                                                                              "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                                                              "latest_build": null,
                                                                              "name": "zeus",
                                                                              "owner_name": "getsentry",
                                                                              "permissions": Object {
                                                                                "admin": true,
                                                                                "read": true,
                                                                                "write": true,
                                                                              },
                                                                              "provider": "gh",
                                                                              "url": "git@github.com:getsentry/zeus.git",
                                                                            },
                                                                            "result": "passed",
                                                                            "source": Object {
                                                                              "author": Object {
                                                                                "email": "dcramer@gmail.com",
                                                                                "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                                "name": "David Cramer",
                                                                              },
                                                                              "created_at": "2018-01-06T16:07:16.814650+00:00",
                                                                              "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                                                              "revision": Object {
                                                                                "author": Object {
                                                                                  "email": "dcramer@gmail.com",
                                                                                  "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                                                                  "name": "David Cramer",
                                                                                },
                                                                                "committed_at": "2018-01-06T16:06:52+00:00",
                                                                                "created_at": "2018-01-06T16:06:52+00:00",
                                                                                "message": "fix: Remove break-word behavior on coverage
",
                                                                                "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                                                              },
                                                                            },
                                                                            "started_at": "2018-01-06T16:07:16.957093+00:00",
                                                                            "stats": Object {
                                                                              "coverage": Object {
                                                                                "diff_lines_covered": 0,
                                                                                "diff_lines_uncovered": 0,
                                                                                "lines_covered": 6127,
                                                                                "lines_uncovered": 3060,
                                                                              },
                                                                              "style_violations": Object {
                                                                                "count": 0,
                                                                              },
                                                                              "tests": Object {
                                                                                "count": 153,
                                                                                "count_unique": 153,
                                                                                "duration": 14673,
                                                                                "failures": 0,
                                                                                "failures_unique": 0,
                                                                              },
                                                                              "webpack": Object {
                                                                                "total_asset_size": 0,
                                                                              },
                                                                            },
                                                                            "status": "finished",
                                                                            "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                                                          },
                                                                        ]
                                                                      }
                                                                      ms={227436}
                                                                      short={true}
                                                                    >
                                                                      <span>
                                                                        4m
                                                                      </span>
                                                                    </Duration>
                                                                  </AggregateDuration>
                                                                </ObjectDuration>
                                                              </div>
                                                            </styled.div>
                                                          </Component>
                                                        </Styled(Component)>
                                                        <Styled(Component)
                                                          hide="sm"
                                                          textAlign="right"
                                                          width={120}
                                                        >
                                                          <Component
                                                            className="sc-gzVnrw hVTCSJ"
                                                            hide="sm"
                                                            textAlign="right"
                                                            width={120}
                                                          >
                                                            <styled.div
                                                              className="sc-gzVnrw hVTCSJ ResultGrid-Column"
                                                              hide="sm"
                                                              style={
                                                                Object {
                                                                  "textAlign": "right",
                                                                }
                                                              }
                                                              textAlign="right"
                                                              width={120}
                                                            >
                                                              <div
                                                                className="sc-gzVnrw hVTCSJ ResultGrid-Column sc-bdVaJa dYmHol"
                                                                style={
                                                                  Object {
                                                                    "textAlign": "right",
                                                                  }
                                                                }
                                                                width={120}
                                                              >
                                                                <TimeSince
                                                                  clock24Hours={false}
                                                                  date="2018-01-06T16:07:16.830829+00:00"
                                                                  suffix="ago"
                                                                >
                                                                  <time
                                                                    dateTime="2018-01-06T16:07:16.830Z"
                                                                    title="January 6, 2018 11:07 AM "
                                                                  >
                                                                    in 3 months
                                                                  </time>
                                                                </TimeSince>
                                                              </div>
                                                            </styled.div>
                                                          </Component>
                                                        </Styled(Component)>
                                                      </div>
                                                    </styled.div>
                                                  </Styled(styled.div)>
                                                </Component>
                                              </Styled(Component)>
                                            </a>
                                          </Link>
                                        </Styled(Link)>
                                      </BuildListItem>
                                    </div>
                                  </div>
                                </styled.div>
                              </BuildList>
                              <Paginator
                                buildList={
                                  Array [
                                    Object {
                                      "created_at": "2018-01-06T16:07:16.830829+00:00",
                                      "external_id": "325812408",
                                      "finished_at": "2018-01-06T16:11:04.393590+00:00",
                                      "id": "aa7097a2-f2fb-11e7-a565-0a580a28057d",
                                      "label": "fix: Remove break-word behavior on coverage",
                                      "number": 650,
                                      "provider": "travis-ci",
                                      "repository": Object {
                                        "backend": "git",
                                        "created_at": "2017-08-15T17:01:33.206772+00:00",
                                        "full_name": "gh/getsentry/zeus",
                                        "id": "63e820d4-81db-11e7-a6df-0a580a28004e",
                                        "latest_build": null,
                                        "name": "zeus",
                                        "owner_name": "getsentry",
                                        "permissions": Object {
                                          "admin": true,
                                          "read": true,
                                          "write": true,
                                        },
                                        "provider": "gh",
                                        "url": "git@github.com:getsentry/zeus.git",
                                      },
                                      "result": "passed",
                                      "source": Object {
                                        "author": Object {
                                          "email": "dcramer@gmail.com",
                                          "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                          "name": "David Cramer",
                                        },
                                        "created_at": "2018-01-06T16:07:16.814650+00:00",
                                        "id": "aa6e1f90-f2fb-11e7-a565-0a580a28057d",
                                        "revision": Object {
                                          "author": Object {
                                            "email": "dcramer@gmail.com",
                                            "id": "659dc21c-81db-11e7-988a-0a580a28047a",
                                            "name": "David Cramer",
                                          },
                                          "committed_at": "2018-01-06T16:06:52+00:00",
                                          "created_at": "2018-01-06T16:06:52+00:00",
                                          "message": "fix: Remove break-word behavior on coverage
",
                                          "sha": "eff634a68a01d081c0bdc51752dfa0709781f0e4",
                                        },
                                      },
                                      "started_at": "2018-01-06T16:07:16.957093+00:00",
                                      "stats": Object {
                                        "coverage": Object {
                                          "diff_lines_covered": 0,
                                          "diff_lines_uncovered": 0,
                                          "lines_covered": 6127,
                                          "lines_uncovered": 3060,
                                        },
                                        "style_violations": Object {
                                          "count": 0,
                                        },
                                        "tests": Object {
                                          "count": 153,
                                          "count_unique": 153,
                                          "duration": 14673,
                                          "failures": 0,
                                          "failures_unique": 0,
                                        },
                                        "webpack": Object {
                                          "total_asset_size": 0,
                                        },
                                      },
                                      "status": "finished",
                                      "url": "https://travis-ci.org/getsentry/zeus/builds/325812408",
                                    },
                                  ]
                                }
                                error={false}
                                links={Object {}}
                                loading={false}
                                location={
                                  Object {
                                    "pathame": "/mock-pathname/",
                                    "query": Object {},
                                  }
                                }
                                params={Object {}}
                                subscribe={[Function]}
                                unsubscribe={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "marginBottom": 20,
                                    }
                                  }
                                >
                                  <styled.div
                                    align="right"
                                  >
                                    <div
                                      className="sc-chPdSV bFkQKf"
                                    >
                                      <Styled(Link)
                                        disabled={true}
                                        to={null}
                                      >
                                        <Link
                                          className="sc-kgoBCf eWzjUi"
                                          disabled={true}
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to={null}
                                        >
                                          <a
                                            className="sc-kgoBCf eWzjUi"
                                            disabled={true}
                                            style={Object {}}
                                          >
                                            Previous
                                          </a>
                                        </Link>
                                      </Styled(Link)>
                                      <Styled(Link)
                                        disabled={true}
                                        to={null}
                                      >
                                        <Link
                                          className="sc-kgoBCf eWzjUi"
                                          disabled={true}
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to={null}
                                        >
                                          <a
                                            className="sc-kgoBCf eWzjUi"
                                            disabled={true}
                                            style={Object {}}
                                          >
                                            Next
                                          </a>
                                        </Link>
                                      </Styled(Link)>
                                    </div>
                                  </styled.div>
                                </div>
                              </Paginator>
                            </div>
                          </BuildListBody>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                  <Styled(UnstyledFooter)>
                    <UnstyledFooter
                      className="sc-kAzzGY eptMiq"
                    >
                      <div
                        className="sc-kAzzGY eptMiq"
                      >
                        <div>
                          <a
                            href="https://github.com/getsentry/zeus"
                            style={
                              Object {
                                "color": "inherit",
                                "fontWeight": 500,
                              }
                            }
                          >
                            Zeus
                          </a>
                           
                          is Open Source Software
                          <br />
                          <small>
                            Build 
                            unknown
                          </small>
                        </div>
                        <div
                          style={
                            Object {
                              "clear": "both",
                            }
                          }
                        />
                      </div>
                    </UnstyledFooter>
                  </Styled(UnstyledFooter)>
                </div>
              </Layout>
            </DocumentTitle>
          </SideEffect(DocumentTitle)>
        </UserBuildList>
      </StreamSubscription>
    </Connect(StreamSubscription)>
  </Connect(Connect(StreamSubscription))>
</RepositoryContext>
`;
