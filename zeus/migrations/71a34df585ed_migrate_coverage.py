"""migrate_coverage

Revision ID: 71a34df585ed
Revises: 355fb6ea34f8
Create Date: 2017-10-03 23:18:33.209716

"""
import zeus
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "71a34df585ed"
down_revision = "355fb6ea34f8"
branch_labels = ()
depends_on = None


def upgrade():
    # we dont retain historical data as we simply dont care yet
    op.execute("truncate table filecoverage")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "filecoverage", sa.Column("build_id", zeus.db.types.guid.GUID(), nullable=False)
    )
    op.create_index(
        op.f("ix_filecoverage_build_id"), "filecoverage", ["build_id"], unique=False
    )
    op.create_unique_constraint(
        "unq_coverage_filname", "filecoverage", ["build_id", "filename"]
    )
    op.drop_constraint("unq_job_filname", "filecoverage", type_="unique")
    op.drop_constraint("filecoverage_job_id_fkey", "filecoverage", type_="foreignkey")
    op.create_foreign_key(
        None, "filecoverage", "build", ["build_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("filecoverage", "job_id")


# ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "filecoverage",
        sa.Column("job_id", postgresql.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "filecoverage", type_="foreignkey")
    op.create_foreign_key(
        "filecoverage_job_id_fkey",
        "filecoverage",
        "job",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint(
        "unq_job_filname", "filecoverage", ["job_id", "filename"]
    )
    op.drop_constraint("unq_coverage_filname", "filecoverage", type_="unique")
    op.drop_index(op.f("ix_filecoverage_build_id"), table_name="filecoverage")
    op.drop_column("filecoverage", "build_id")


# ### end Alembic commands ###
